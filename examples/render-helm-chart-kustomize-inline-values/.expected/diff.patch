diff --git a/resources.yaml b/resources.yaml
new file mode 100644
index 0000000..e2e869b
--- /dev/null
+++ b/resources.yaml
@@ -0,0 +1,127 @@
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: moria-ocp-pipeline
+  namespace: mynamespace
+rules:
+- apiGroups:
+  - ""
+  resources:
+  - '*'
+  verbs:
+  - '*'
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: moria-ocp-pipeline
+  namespace: mynamespace
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: moria-ocp-pipeline
+subjects:
+- kind: ServiceAccount
+  name: jenkins
+  namespace: mynamespace
+---
+apiVersion: v1
+data:
+  config: eyJleGFtcGxlIjoidmFsdWUifQ==
+kind: Secret
+metadata:
+  labels:
+    chart: ocp-pipeline-0.1.16
+    heritage: Helm
+    release: moria
+  name: moria-config
+type: Opaque
+---
+apiVersion: v1
+data:
+  WebHookSecretKey: MTIzNDU2Nzg=
+kind: Secret
+metadata:
+  labels:
+    chart: ocp-pipeline-0.1.16
+    heritage: Helm
+    release: moria
+  name: moria-git-webhook-secret
+type: Opaque
+---
+apiVersion: build.openshift.io/v1
+kind: BuildConfig
+metadata:
+  labels:
+    app: ocp-pipeline
+    chart: ocp-pipeline-0.1.16
+    heritage: Helm
+    release: moria
+  name: moria-ocp-pipeline-deploy
+  namespace: null
+spec:
+  nodeSelector: {}
+  resources:
+    limits:
+      cpu: 4000m
+      memory: 8G
+    requests:
+      cpu: 2000m
+      memory: 4G
+  strategy:
+    jenkinsPipelineStrategy:
+      jenkinsfile: |-
+        def helmName = "helm-v3.1.0-linux-amd64.tar.gz"
+        def chartName = "metadata-curator"
+        def chartRepo = "http://bcgov.github.io/helm-charts"
+        def releaseName  = "mc"
+        def releaseNamespace = ""
+        def forceRecreate = "false"
+        def callAnotherPipe = "false"
+        def useEnv = "false"
+        def fromEnv = "commit"
+        def setFlag = "image.tag"
+
+          node("nodejs") {
+            stage("deploy (it's already built)") {
+              sh """
+                curl -L -O https://get.helm.sh/${helmName}
+                tar -zxvf ${helmName}
+                cd linux-amd64
+
+                curl -L -O https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux32
+                chmod ugo+x ./jq-linux32
+                npm install -g json2yaml
+
+                export CONF1=`oc get secret moria-config -o json | ./jq-linux32 .data.config`
+                export CONF2=`sed -e 's/^"//' -e 's/"\$//' <<<"\$CONF1"`
+                export CONF3=`echo \$CONF2 | base64 -d -`
+                export CONF=`echo \$CONF3 | json2yaml`
+
+                echo "\$CONF" > ./config.yaml
+                oc project ${releaseNamespace}
+                ./helm repo add chart ${chartRepo}
+                ./helm repo update
+                if [ "${forceRecreate}" = "true" ]; then
+                  ./helm upgrade ${releaseName} chart/${chartName} -f ./config.yaml --install --set hashLabel="${releaseName}\$(cat /dev/urandom | tr -dc 'a-z0-9' | fold -w 32 | head -n 1)"
+                elif [ "${useEnv}" = "true" ]; then
+                  ./helm upgrade ${releaseName} chart/${chartName} -f ./config.yaml --install --set ${setFlag}=${env[fromEnv]}
+                else
+                  ./helm upgrade ${releaseName} chart/${chartName} -f ./config.yaml --install
+                fi
+
+                if [ "${callAnotherPipe}" = "true" ]; then
+                  curl -d '' http://otherwebhookUrl
+                fi
+              """
+          }
+        }
+    type: JenkinsPipeline
+  triggers:
+  - generic:
+      allowEnv: true
+      secretReference:
+        name: moria-git-webhook-secret
+    type: generic
+status:
+  lastVersion: 0

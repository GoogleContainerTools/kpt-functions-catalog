diff --git a/cert-manager/deployment_cert-manager-cainjector.yaml b/cert-manager/deployment_cert-manager-cainjector.yaml
new file mode 100644
index 0000000..cd99e2a
--- /dev/null
+++ b/cert-manager/deployment_cert-manager-cainjector.yaml
@@ -0,0 +1,44 @@
+# Source: cert-manager/templates/cainjector-deployment.yaml
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: cert-manager-cainjector
+  namespace: "cert-manager"
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
+spec:
+  replicas: 1
+  selector:
+    matchLabels:
+      app.kubernetes.io/name: cainjector
+      app.kubernetes.io/instance: cert-manager
+      app.kubernetes.io/component: "cainjector"
+  template:
+    metadata:
+      labels:
+        app: cainjector
+        app.kubernetes.io/name: cainjector
+        app.kubernetes.io/instance: cert-manager
+        app.kubernetes.io/managed-by: Helm
+        app.kubernetes.io/component: "cainjector"
+        helm.sh/chart: cert-manager-v1.3.0
+    spec:
+      serviceAccountName: cert-manager-cainjector
+      containers:
+      - name: cert-manager
+        image: "quay.io/jetstack/cert-manager-cainjector:v1.3.0"
+        imagePullPolicy: Always
+        args:
+        - --v=2
+        - --leader-election-namespace=kube-system
+        env:
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        resources: {}
diff --git a/cert-manager/deployment_cert-manager-webhook.yaml b/cert-manager/deployment_cert-manager-webhook.yaml
new file mode 100644
index 0000000..66f1c93
--- /dev/null
+++ b/cert-manager/deployment_cert-manager-webhook.yaml
@@ -0,0 +1,70 @@
+# Source: cert-manager/templates/webhook-deployment.yaml
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: cert-manager-webhook
+  namespace: "cert-manager"
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+spec:
+  replicas: 1
+  selector:
+    matchLabels:
+      app.kubernetes.io/name: webhook
+      app.kubernetes.io/instance: cert-manager
+      app.kubernetes.io/component: "webhook"
+  template:
+    metadata:
+      labels:
+        app: webhook
+        app.kubernetes.io/name: webhook
+        app.kubernetes.io/instance: cert-manager
+        app.kubernetes.io/managed-by: Helm
+        app.kubernetes.io/component: "webhook"
+        helm.sh/chart: cert-manager-v1.3.0
+    spec:
+      serviceAccountName: cert-manager-webhook
+      containers:
+      - name: cert-manager
+        image: "quay.io/jetstack/cert-manager-webhook:v1.3.0"
+        imagePullPolicy: IfNotPresent
+        args:
+        - --v=2
+        - --secure-port=10250
+        - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
+        - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
+        - --dynamic-serving-dns-names=cert-manager-webhook,cert-manager-webhook.cert-manager,cert-manager-webhook.cert-manager.svc
+        ports:
+        - name: https
+          containerPort: 10250
+        livenessProbe:
+          httpGet:
+            path: /livez
+            port: 6080
+            scheme: HTTP
+          initialDelaySeconds: 60
+          periodSeconds: 10
+          timeoutSeconds: 1
+          successThreshold: 1
+          failureThreshold: 3
+        readinessProbe:
+          httpGet:
+            path: /healthz
+            port: 6080
+            scheme: HTTP
+          initialDelaySeconds: 5
+          periodSeconds: 5
+          timeoutSeconds: 1
+          successThreshold: 1
+          failureThreshold: 3
+        env:
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        resources: {}
diff --git a/cert-manager/deployment_cert-manager.yaml b/cert-manager/deployment_cert-manager.yaml
new file mode 100644
index 0000000..954ad37
--- /dev/null
+++ b/cert-manager/deployment_cert-manager.yaml
@@ -0,0 +1,52 @@
+# Source: cert-manager/templates/deployment.yaml
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: cert-manager
+  namespace: "cert-manager"
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+spec:
+  replicas: 1
+  selector:
+    matchLabels:
+      app.kubernetes.io/name: cert-manager
+      app.kubernetes.io/instance: cert-manager
+      app.kubernetes.io/component: "controller"
+  template:
+    metadata:
+      labels:
+        app: cert-manager
+        app.kubernetes.io/name: cert-manager
+        app.kubernetes.io/instance: cert-manager
+        app.kubernetes.io/component: "controller"
+        app.kubernetes.io/managed-by: Helm
+        helm.sh/chart: cert-manager-v1.3.0
+      annotations:
+        prometheus.io/path: "/metrics"
+        prometheus.io/scrape: 'true'
+        prometheus.io/port: '9402'
+    spec:
+      serviceAccountName: cert-manager
+      containers:
+      - name: cert-manager
+        image: "quay.io/jetstack/cert-manager-controller:v1.3.0"
+        imagePullPolicy: Always
+        args:
+        - --v=2
+        - --cluster-resource-namespace=$(POD_NAMESPACE)
+        - --leader-election-namespace=kube-system
+        ports:
+        - containerPort: 9402
+          protocol: TCP
+        env:
+        - name: POD_NAMESPACE
+          valueFrom:
+            fieldRef:
+              fieldPath: metadata.namespace
+        resources: {}
diff --git a/cert-manager/role_cert-manager-webhook:dynamic-serving.yaml b/cert-manager/role_cert-manager-webhook:dynamic-serving.yaml
new file mode 100644
index 0000000..46015d8
--- /dev/null
+++ b/cert-manager/role_cert-manager-webhook:dynamic-serving.yaml
@@ -0,0 +1,23 @@
+# Source: cert-manager/templates/webhook-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: cert-manager-webhook:dynamic-serving
+  namespace: "cert-manager"
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: [""]
+  resources: ["secrets"]
+  resourceNames:
+  - 'cert-manager-webhook-ca'
+  verbs: ["get", "list", "watch", "update"]
+# It's not possible to grant CREATE permission on a single resourceName.
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["create"]
diff --git a/cert-manager/rolebinding_cert-manager-webhook:dynamic-serving.yaml b/cert-manager/rolebinding_cert-manager-webhook:dynamic-serving.yaml
new file mode 100644
index 0000000..3e101f4
--- /dev/null
+++ b/cert-manager/rolebinding_cert-manager-webhook:dynamic-serving.yaml
@@ -0,0 +1,22 @@
+# Source: cert-manager/templates/webhook-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: cert-manager-webhook:dynamic-serving
+  namespace: "cert-manager"
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: cert-manager-webhook:dynamic-serving
+subjects:
+- apiGroup: ""
+  kind: ServiceAccount
+  name: cert-manager-webhook
+  namespace: cert-manager
diff --git a/cert-manager/service_cert-manager-webhook.yaml b/cert-manager/service_cert-manager-webhook.yaml
new file mode 100644
index 0000000..acb83fc
--- /dev/null
+++ b/cert-manager/service_cert-manager-webhook.yaml
@@ -0,0 +1,23 @@
+# Source: cert-manager/templates/webhook-service.yaml
+apiVersion: v1
+kind: Service
+metadata:
+  name: cert-manager-webhook
+  namespace: "cert-manager"
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+spec:
+  type: ClusterIP
+  ports:
+  - name: https
+    port: 443
+    targetPort: 10250
+  selector:
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/component: "webhook"
diff --git a/cert-manager/service_cert-manager.yaml b/cert-manager/service_cert-manager.yaml
new file mode 100644
index 0000000..a0dba52
--- /dev/null
+++ b/cert-manager/service_cert-manager.yaml
@@ -0,0 +1,23 @@
+# Source: cert-manager/templates/service.yaml
+apiVersion: v1
+kind: Service
+metadata:
+  name: cert-manager
+  namespace: "cert-manager"
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+spec:
+  type: ClusterIP
+  ports:
+  - protocol: TCP
+    port: 9402
+    targetPort: 9402
+  selector:
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/component: "controller"
diff --git a/cert-manager/serviceaccount_cert-manager-cainjector.yaml b/cert-manager/serviceaccount_cert-manager-cainjector.yaml
new file mode 100644
index 0000000..0c5c505
--- /dev/null
+++ b/cert-manager/serviceaccount_cert-manager-cainjector.yaml
@@ -0,0 +1,14 @@
+# Source: cert-manager/templates/cainjector-serviceaccount.yaml
+apiVersion: v1
+kind: ServiceAccount
+automountServiceAccountToken: true
+metadata:
+  name: cert-manager-cainjector
+  namespace: "cert-manager"
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
diff --git a/cert-manager/serviceaccount_cert-manager-webhook.yaml b/cert-manager/serviceaccount_cert-manager-webhook.yaml
new file mode 100644
index 0000000..4e18e56
--- /dev/null
+++ b/cert-manager/serviceaccount_cert-manager-webhook.yaml
@@ -0,0 +1,14 @@
+# Source: cert-manager/templates/webhook-serviceaccount.yaml
+apiVersion: v1
+kind: ServiceAccount
+automountServiceAccountToken: true
+metadata:
+  name: cert-manager-webhook
+  namespace: "cert-manager"
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
diff --git a/cert-manager/serviceaccount_cert-manager.yaml b/cert-manager/serviceaccount_cert-manager.yaml
new file mode 100644
index 0000000..82f4551
--- /dev/null
+++ b/cert-manager/serviceaccount_cert-manager.yaml
@@ -0,0 +1,14 @@
+# Source: cert-manager/templates/serviceaccount.yaml
+apiVersion: v1
+kind: ServiceAccount
+automountServiceAccountToken: true
+metadata:
+  name: cert-manager
+  namespace: "cert-manager"
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
diff --git a/clusterrole_cert-manager-cainjector.yaml b/clusterrole_cert-manager-cainjector.yaml
new file mode 100644
index 0000000..d0966ac
--- /dev/null
+++ b/clusterrole_cert-manager-cainjector.yaml
@@ -0,0 +1,34 @@
+# Source: cert-manager/templates/cainjector-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-cainjector
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["get", "create", "update", "patch"]
+- apiGroups: ["admissionregistration.k8s.io"]
+  resources: ["validatingwebhookconfigurations", "mutatingwebhookconfigurations"]
+  verbs: ["get", "list", "watch", "update"]
+- apiGroups: ["apiregistration.k8s.io"]
+  resources: ["apiservices"]
+  verbs: ["get", "list", "watch", "update"]
+- apiGroups: ["apiextensions.k8s.io"]
+  resources: ["customresourcedefinitions"]
+  verbs: ["get", "list", "watch", "update"]
+- apiGroups: ["auditregistration.k8s.io"]
+  resources: ["auditsinks"]
+  verbs: ["get", "list", "watch", "update"]
diff --git a/clusterrole_cert-manager-controller-approve:cert-manager-io.yaml b/clusterrole_cert-manager-controller-approve:cert-manager-io.yaml
new file mode 100644
index 0000000..a2d76f8
--- /dev/null
+++ b/clusterrole_cert-manager-controller-approve:cert-manager-io.yaml
@@ -0,0 +1,18 @@
+# Source: cert-manager/templates/rbac.yaml
+# Permission to approve CertificateRequests referencing cert-manager.io Issuers and ClusterIssuers
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-approve:cert-manager-io
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cert-manager"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["signers"]
+  verbs: ["approve"]
+  resourceNames: ["issuers.cert-manager.io/*", "clusterissuers.cert-manager.io/*"]
diff --git a/clusterrole_cert-manager-controller-certificates.yaml b/clusterrole_cert-manager-controller-certificates.yaml
new file mode 100644
index 0000000..22b2661
--- /dev/null
+++ b/clusterrole_cert-manager-controller-certificates.yaml
@@ -0,0 +1,35 @@
+# Source: cert-manager/templates/rbac.yaml
+# Certificates controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-certificates
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificates/status", "certificaterequests", "certificaterequests/status"]
+  verbs: ["update"]
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificaterequests", "clusterissuers", "issuers"]
+  verbs: ["get", "list", "watch"]
+# We require these rules to support users with the OwnerReferencesPermissionEnforcement
+# admission controller enabled:
+# https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates/finalizers", "certificaterequests/finalizers"]
+  verbs: ["update"]
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["orders"]
+  verbs: ["create", "delete", "get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch", "create", "update", "delete"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
diff --git a/clusterrole_cert-manager-controller-challenges.yaml b/clusterrole_cert-manager-controller-challenges.yaml
new file mode 100644
index 0000000..d1f1143
--- /dev/null
+++ b/clusterrole_cert-manager-controller-challenges.yaml
@@ -0,0 +1,57 @@
+# Source: cert-manager/templates/rbac.yaml
+# Challenges controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-challenges
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+# Use to update challenge resource status
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges", "challenges/status"]
+  verbs: ["update"]
+# Used to watch challenge resources
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges"]
+  verbs: ["get", "list", "watch"]
+# Used to watch challenges, issuer and clusterissuer resources
+- apiGroups: ["cert-manager.io"]
+  resources: ["issuers", "clusterissuers"]
+  verbs: ["get", "list", "watch"]
+# Need to be able to retrieve ACME account private key to complete challenges
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch"]
+# Used to create events
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
+# HTTP01 rules
+- apiGroups: [""]
+  resources: ["pods", "services"]
+  verbs: ["get", "list", "watch", "create", "delete"]
+- apiGroups: ["networking.k8s.io"]
+  resources: ["ingresses"]
+  verbs: ["get", "list", "watch", "create", "delete", "update"]
+# We require the ability to specify a custom hostname when we are creating
+# new ingress resources.
+# See: https://github.com/openshift/origin/blob/21f191775636f9acadb44fa42beeb4f75b255532/pkg/route/apiserver/admission/ingress_admission.go#L84-L148
+- apiGroups: ["route.openshift.io"]
+  resources: ["routes/custom-host"]
+  verbs: ["create"]
+# We require these rules to support users with the OwnerReferencesPermissionEnforcement
+# admission controller enabled:
+# https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges/finalizers"]
+  verbs: ["update"]
+# DNS01 rules (duplicated above)
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch"]
diff --git a/clusterrole_cert-manager-controller-clusterissuers.yaml b/clusterrole_cert-manager-controller-clusterissuers.yaml
new file mode 100644
index 0000000..61e0ffc
--- /dev/null
+++ b/clusterrole_cert-manager-controller-clusterissuers.yaml
@@ -0,0 +1,26 @@
+# Source: cert-manager/templates/rbac.yaml
+# ClusterIssuer controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-clusterissuers
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["clusterissuers", "clusterissuers/status"]
+  verbs: ["update"]
+- apiGroups: ["cert-manager.io"]
+  resources: ["clusterissuers"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch", "create", "update", "delete"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
diff --git a/clusterrole_cert-manager-controller-ingress-shim.yaml b/clusterrole_cert-manager-controller-ingress-shim.yaml
new file mode 100644
index 0000000..40b7fd3
--- /dev/null
+++ b/clusterrole_cert-manager-controller-ingress-shim.yaml
@@ -0,0 +1,32 @@
+# Source: cert-manager/templates/rbac.yaml
+# ingress-shim controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-ingress-shim
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificaterequests"]
+  verbs: ["create", "update", "delete"]
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificaterequests", "issuers", "clusterissuers"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: ["networking.k8s.io"]
+  resources: ["ingresses"]
+  verbs: ["get", "list", "watch"]
+# We require these rules to support users with the OwnerReferencesPermissionEnforcement
+# admission controller enabled:
+# https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
+- apiGroups: ["networking.k8s.io"]
+  resources: ["ingresses/finalizers"]
+  verbs: ["update"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
diff --git a/clusterrole_cert-manager-controller-issuers.yaml b/clusterrole_cert-manager-controller-issuers.yaml
new file mode 100644
index 0000000..e8b7181
--- /dev/null
+++ b/clusterrole_cert-manager-controller-issuers.yaml
@@ -0,0 +1,26 @@
+# Source: cert-manager/templates/rbac.yaml
+# Issuer controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-issuers
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["issuers", "issuers/status"]
+  verbs: ["update"]
+- apiGroups: ["cert-manager.io"]
+  resources: ["issuers"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch", "create", "update", "delete"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
diff --git a/clusterrole_cert-manager-controller-orders.yaml b/clusterrole_cert-manager-controller-orders.yaml
new file mode 100644
index 0000000..24901f6
--- /dev/null
+++ b/clusterrole_cert-manager-controller-orders.yaml
@@ -0,0 +1,38 @@
+# Source: cert-manager/templates/rbac.yaml
+# Orders controller role
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-controller-orders
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["orders", "orders/status"]
+  verbs: ["update"]
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["orders", "challenges"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: ["cert-manager.io"]
+  resources: ["clusterissuers", "issuers"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges"]
+  verbs: ["create", "delete"]
+# We require these rules to support users with the OwnerReferencesPermissionEnforcement
+# admission controller enabled:
+# https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#ownerreferencespermissionenforcement
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["orders/finalizers"]
+  verbs: ["update"]
+- apiGroups: [""]
+  resources: ["secrets"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: [""]
+  resources: ["events"]
+  verbs: ["create", "patch"]
diff --git a/clusterrole_cert-manager-edit.yaml b/clusterrole_cert-manager-edit.yaml
new file mode 100644
index 0000000..1dca04d
--- /dev/null
+++ b/clusterrole_cert-manager-edit.yaml
@@ -0,0 +1,21 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-edit
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+    rbac.authorization.k8s.io/aggregate-to-edit: "true"
+    rbac.authorization.k8s.io/aggregate-to-admin: "true"
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificaterequests", "issuers"]
+  verbs: ["create", "delete", "deletecollection", "patch", "update"]
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges", "orders"]
+  verbs: ["create", "delete", "deletecollection", "patch", "update"]
diff --git a/clusterrole_cert-manager-view.yaml b/clusterrole_cert-manager-view.yaml
new file mode 100644
index 0000000..2ca4735
--- /dev/null
+++ b/clusterrole_cert-manager-view.yaml
@@ -0,0 +1,22 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-view
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+    rbac.authorization.k8s.io/aggregate-to-view: "true"
+    rbac.authorization.k8s.io/aggregate-to-edit: "true"
+    rbac.authorization.k8s.io/aggregate-to-admin: "true"
+rules:
+- apiGroups: ["cert-manager.io"]
+  resources: ["certificates", "certificaterequests", "issuers"]
+  verbs: ["get", "list", "watch"]
+- apiGroups: ["acme.cert-manager.io"]
+  resources: ["challenges", "orders"]
+  verbs: ["get", "list", "watch"]
diff --git a/clusterrole_cert-manager-webhook:subjectaccessreviews.yaml b/clusterrole_cert-manager-webhook:subjectaccessreviews.yaml
new file mode 100644
index 0000000..7f7c0e6
--- /dev/null
+++ b/clusterrole_cert-manager-webhook:subjectaccessreviews.yaml
@@ -0,0 +1,16 @@
+# Source: cert-manager/templates/webhook-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: cert-manager-webhook:subjectaccessreviews
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+- apiGroups: ["authorization.k8s.io"]
+  resources: ["subjectaccessreviews"]
+  verbs: ["create"]
diff --git a/clusterrolebinding_cert-manager-cainjector.yaml b/clusterrolebinding_cert-manager-cainjector.yaml
new file mode 100644
index 0000000..51f6e50
--- /dev/null
+++ b/clusterrolebinding_cert-manager-cainjector.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/cainjector-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-cainjector
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-cainjector
+subjects:
+- name: cert-manager-cainjector
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-approve:cert-manager-io.yaml b/clusterrolebinding_cert-manager-controller-approve:cert-manager-io.yaml
new file mode 100644
index 0000000..3b61281
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-approve:cert-manager-io.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-approve:cert-manager-io
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cert-manager"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-approve:cert-manager-io
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-certificates.yaml b/clusterrolebinding_cert-manager-controller-certificates.yaml
new file mode 100644
index 0000000..c16718e
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-certificates.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-certificates
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-certificates
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-challenges.yaml b/clusterrolebinding_cert-manager-controller-challenges.yaml
new file mode 100644
index 0000000..8295486
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-challenges.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-challenges
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-challenges
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-clusterissuers.yaml b/clusterrolebinding_cert-manager-controller-clusterissuers.yaml
new file mode 100644
index 0000000..2c8ba39
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-clusterissuers.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-clusterissuers
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-clusterissuers
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-ingress-shim.yaml b/clusterrolebinding_cert-manager-controller-ingress-shim.yaml
new file mode 100644
index 0000000..ff7b7cb
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-ingress-shim.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-ingress-shim
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-ingress-shim
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-issuers.yaml b/clusterrolebinding_cert-manager-controller-issuers.yaml
new file mode 100644
index 0000000..ce86c24
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-issuers.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-issuers
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-issuers
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-controller-orders.yaml b/clusterrolebinding_cert-manager-controller-orders.yaml
new file mode 100644
index 0000000..bd4e61a
--- /dev/null
+++ b/clusterrolebinding_cert-manager-controller-orders.yaml
@@ -0,0 +1,20 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-controller-orders
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-controller-orders
+subjects:
+- name: cert-manager
+  namespace: "cert-manager"
+  kind: ServiceAccount
diff --git a/clusterrolebinding_cert-manager-webhook:subjectaccessreviews.yaml b/clusterrolebinding_cert-manager-webhook:subjectaccessreviews.yaml
new file mode 100644
index 0000000..90bac89
--- /dev/null
+++ b/clusterrolebinding_cert-manager-webhook:subjectaccessreviews.yaml
@@ -0,0 +1,21 @@
+# Source: cert-manager/templates/webhook-rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: cert-manager-webhook:subjectaccessreviews
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: cert-manager-webhook:subjectaccessreviews
+subjects:
+- apiGroup: ""
+  kind: ServiceAccount
+  name: cert-manager-webhook
+  namespace: cert-manager
diff --git a/kube-system/role_cert-manager-cainjector:leaderelection.yaml b/kube-system/role_cert-manager-cainjector:leaderelection.yaml
new file mode 100644
index 0000000..6b6db9c
--- /dev/null
+++ b/kube-system/role_cert-manager-cainjector:leaderelection.yaml
@@ -0,0 +1,27 @@
+# Source: cert-manager/templates/cainjector-rbac.yaml
+# leader election rules
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: cert-manager-cainjector:leaderelection
+  namespace: kube-system
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+# Used for leader election by the controller
+# cert-manager-cainjector-leader-election is used by the CertificateBased injector controller
+#   see cmd/cainjector/start.go#L113
+# cert-manager-cainjector-leader-election-core is used by the SecretBased injector controller
+#   see cmd/cainjector/start.go#L137
+- apiGroups: [""]
+  resources: ["configmaps"]
+  resourceNames: ["cert-manager-cainjector-leader-election", "cert-manager-cainjector-leader-election-core"]
+  verbs: ["get", "update", "patch"]
+- apiGroups: [""]
+  resources: ["configmaps"]
+  verbs: ["create"]
diff --git a/kube-system/role_cert-manager:leaderelection.yaml b/kube-system/role_cert-manager:leaderelection.yaml
new file mode 100644
index 0000000..608ecc3
--- /dev/null
+++ b/kube-system/role_cert-manager:leaderelection.yaml
@@ -0,0 +1,22 @@
+# Source: cert-manager/templates/rbac.yaml
+apiVersion: rbac.authorization.k8s.io/v1
+kind: Role
+metadata:
+  name: cert-manager:leaderelection
+  namespace: kube-system
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+rules:
+# Used for leader election by the controller
+- apiGroups: [""]
+  resources: ["configmaps"]
+  resourceNames: ["cert-manager-controller"]
+  verbs: ["get", "update", "patch"]
+- apiGroups: [""]
+  resources: ["configmaps"]
+  verbs: ["create"]
diff --git a/kube-system/rolebinding_cert-manager-cainjector:leaderelection.yaml b/kube-system/rolebinding_cert-manager-cainjector:leaderelection.yaml
new file mode 100644
index 0000000..9803017
--- /dev/null
+++ b/kube-system/rolebinding_cert-manager-cainjector:leaderelection.yaml
@@ -0,0 +1,23 @@
+# Source: cert-manager/templates/cainjector-rbac.yaml
+# grant cert-manager permission to manage the leaderelection configmap in the
+# leader election namespace
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: cert-manager-cainjector:leaderelection
+  namespace: kube-system
+  labels:
+    app: cainjector
+    app.kubernetes.io/name: cainjector
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "cainjector"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: cert-manager-cainjector:leaderelection
+subjects:
+- kind: ServiceAccount
+  name: cert-manager-cainjector
+  namespace: cert-manager
diff --git a/kube-system/rolebinding_cert-manager:leaderelection.yaml b/kube-system/rolebinding_cert-manager:leaderelection.yaml
new file mode 100644
index 0000000..6f5d13e
--- /dev/null
+++ b/kube-system/rolebinding_cert-manager:leaderelection.yaml
@@ -0,0 +1,24 @@
+# Source: cert-manager/templates/rbac.yaml
+# grant cert-manager permission to manage the leaderelection configmap in the
+# leader election namespace
+apiVersion: rbac.authorization.k8s.io/v1
+kind: RoleBinding
+metadata:
+  name: cert-manager:leaderelection
+  namespace: kube-system
+  labels:
+    app: cert-manager
+    app.kubernetes.io/name: cert-manager
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "controller"
+    helm.sh/chart: cert-manager-v1.3.0
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: Role
+  name: cert-manager:leaderelection
+subjects:
+- apiGroup: ""
+  kind: ServiceAccount
+  name: cert-manager
+  namespace: cert-manager
diff --git a/mutatingwebhookconfiguration_cert-manager-webhook.yaml b/mutatingwebhookconfiguration_cert-manager-webhook.yaml
new file mode 100644
index 0000000..d810c6c
--- /dev/null
+++ b/mutatingwebhookconfiguration_cert-manager-webhook.yaml
@@ -0,0 +1,37 @@
+# Source: cert-manager/templates/webhook-mutating-webhook.yaml
+apiVersion: admissionregistration.k8s.io/v1
+kind: MutatingWebhookConfiguration
+metadata:
+  name: cert-manager-webhook
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+  annotations:
+    cert-manager.io/inject-ca-from-secret: "cert-manager/cert-manager-webhook-ca"
+webhooks:
+- name: webhook.cert-manager.io
+  rules:
+  - apiGroups:
+    - "cert-manager.io"
+    - "acme.cert-manager.io"
+    apiVersions:
+    - "*"
+    operations:
+    - CREATE
+    - UPDATE
+    resources:
+    - "*/*"
+  admissionReviewVersions: ["v1", "v1beta1"]
+  timeoutSeconds: 10
+  failurePolicy: Fail
+  # Only include 'sideEffects' field in Kubernetes 1.12+
+  sideEffects: None
+  clientConfig:
+    service:
+      name: cert-manager-webhook
+      namespace: "cert-manager"
+      path: /mutate
diff --git a/validatingwebhookconfiguration_cert-manager-webhook.yaml b/validatingwebhookconfiguration_cert-manager-webhook.yaml
new file mode 100644
index 0000000..858cc0d
--- /dev/null
+++ b/validatingwebhookconfiguration_cert-manager-webhook.yaml
@@ -0,0 +1,46 @@
+# Source: cert-manager/templates/webhook-validating-webhook.yaml
+apiVersion: admissionregistration.k8s.io/v1
+kind: ValidatingWebhookConfiguration
+metadata:
+  name: cert-manager-webhook
+  labels:
+    app: webhook
+    app.kubernetes.io/name: webhook
+    app.kubernetes.io/instance: cert-manager
+    app.kubernetes.io/managed-by: Helm
+    app.kubernetes.io/component: "webhook"
+    helm.sh/chart: cert-manager-v1.3.0
+  annotations:
+    cert-manager.io/inject-ca-from-secret: "cert-manager/cert-manager-webhook-ca"
+webhooks:
+- name: webhook.cert-manager.io
+  namespaceSelector:
+    matchExpressions:
+    - key: "cert-manager.io/disable-validation"
+      operator: "NotIn"
+      values:
+      - "true"
+    - key: "name"
+      operator: "NotIn"
+      values:
+      - cert-manager
+  rules:
+  - apiGroups:
+    - "cert-manager.io"
+    - "acme.cert-manager.io"
+    apiVersions:
+    - "*"
+    operations:
+    - CREATE
+    - UPDATE
+    resources:
+    - "*/*"
+  admissionReviewVersions: ["v1", "v1beta1"]
+  timeoutSeconds: 10
+  failurePolicy: Fail
+  sideEffects: None
+  clientConfig:
+    service:
+      name: cert-manager-webhook
+      namespace: "cert-manager"
+      path: /validate

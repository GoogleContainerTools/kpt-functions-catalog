

// Code generated by "mdtogo"; DO NOT EDIT.
package generated

var ApplyReplacementsShort = `Invoke the [kustomize replacements] feature as a KRM function.`
var ApplyReplacementsLong = `
We use a ` + "`" + `Replacements` + "`" + ` object to configure the ` + "`" + `apply-replacements` + "`" + ` function. 

  apiVersion: kpt.dev/v1alpha1
  kind: Replacements
  metadata:
    name: replacements-fn-config
  replacements:
    # your replacements here

The syntax for ` + "`" + `replacements` + "`" + ` is described in the [kustomize replacements] docs. 
`
var ApplyReplacementsExamples = `
Suppose you have the following Job:

  # job.yaml
  apiVersion: batch/v1
  kind: Job
  metadata:
    name: hello

and the following resources:

  # resources.yaml
  apiVersion: v1
  kind: Pod
  metadata:
    name: my-pod
  spec:
    containers:
    - image: busybox
      name: myapp-container
    restartPolicy: OnFailure

You can specify the following functionConfig:

  # replacements.yaml
  apiVersion: kpt.dev/v1alpha1
  kind: Replacements
  metadata:
    name: replacements-fn-config
  replacements:
  - source: 
      kind: Pod
      name: my-pod
      fieldPath: spec
    targets:
    - select:
        name: hello
        kind: Job
      fieldPaths: 
      - spec.template.spec
      options:
        create: true

Invoke the function:

` + "`" + `kpt fn eval --fn-config=replacements.yaml --image=gcr.io/kpt-fn/apply-replacements:unstable` + "`" + `

` + "`" + `job.yaml` + "`" + ` will now have the following contents:

  # job.yaml
  apiVersion: batch/v1
  kind: Job
  metadata:
    name: hello
  spec:
    template:
      spec:
        restartPolicy: OnFailure
        containers:
        - image: busybox
          name: myapp-container

demonstrating that the PodSpec has been copied from the Pod to the Job. 
`

{
  "description": "NetworkServicesHTTPRouteList is a list of NetworkServicesHTTPRoute",
  "required": ["items"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["networkservices.cnrm.cloud.google.com/v1beta1"]
    },
    "items": {
      "description": "List of networkserviceshttproutes. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": ["array", "null"],
      "items": {
        "type": ["object", "null"],
        "required": ["spec"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": ["string", "null"],
            "enum": ["networkservices.cnrm.cloud.google.com/v1beta1"]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": ["string", "null"],
            "enum": ["NetworkServicesHTTPRoute"]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": ["object", "null"],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": ["string", "null"]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": ["string", "null"]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": ["array", "null"],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": ["object", "null"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": ["string", "null"]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": ["string", "null"]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": ["object", "null"]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": ["string", "null"]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": ["string", "null"]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": ["string", "null"]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": ["string", "null"],
                      "format": "date-time"
                    }
                  }
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": ["string", "null"]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": ["string", "null"]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": ["array", "null"],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": ["object", "null"],
                  "required": ["apiVersion", "kind", "name", "uid"],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": ["boolean", "null"]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": ["boolean", "null"]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": ["string", "null"]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": ["string", "null"]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": ["string", "null"]
              }
            }
          },
          "spec": {
            "type": "object",
            "required": ["hostnames", "location", "projectRef", "rules"],
            "properties": {
              "description": {
                "description": "Optional. A free-text description of the resource. Max length 1024 characters.",
                "type": ["string", "null"]
              },
              "gateways": {
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "external": {
                      "type": ["string", "null"]
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": ["string", "null"]
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "hostnames": {
                "description": "Required. Hostnames define a set of hosts that should match against the HTTP host header to select a HttpRoute to process the request. Hostname is the fully qualified domain name of a network host, as defined by RFC 1123 with the exception that ip addresses are not allowed. Wildcard hosts are supported as \"*\" (no prefix or suffix allowed).",
                "type": "array",
                "items": {
                  "type": ["string", "null"]
                }
              },
              "labels": {
                "description": "Optional. Set of label tags associated with the HttpRoute resource.",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "location": {
                "description": "The location for the resource",
                "type": "string"
              },
              "meshes": {
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "external": {
                      "type": ["string", "null"]
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": ["string", "null"]
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "projectRef": {
                "description": "The Project that this resource belongs to.",
                "type": "object",
                "properties": {
                  "external": {
                    "description": "The project for the resource",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              },
              "resourceID": {
                "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
                "type": ["string", "null"]
              },
              "routers": {
                "description": "Optional. Routers define a list of routers this HttpRoute should be served by. Each router reference should match the pattern: `projects/*/locations/global/routers/` The attached Router should be of a type PROXY",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                }
              },
              "rules": {
                "description": "Required. Rules that define how traffic is routed and handled.",
                "type": "array",
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "action": {
                      "description": "The detailed rule defining how to route matched traffic.",
                      "type": ["object", "null"],
                      "properties": {
                        "corsPolicy": {
                          "description": "The specification for allowing client side cross-origin requests.",
                          "type": ["object", "null"],
                          "properties": {
                            "allowCredentials": {
                              "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.",
                              "type": ["boolean", "null"]
                            },
                            "allowHeaders": {
                              "description": "Specifies the content for Access-Control-Allow-Headers header.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "allowMethods": {
                              "description": "Specifies the content for Access-Control-Allow-Methods header.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "allowOriginRegexes": {
                              "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "allowOrigins": {
                              "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "disabled": {
                              "description": "If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.",
                              "type": ["boolean", "null"]
                            },
                            "exposeHeaders": {
                              "description": "Specifies the content for Access-Control-Expose-Headers header.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "maxAge": {
                              "description": "Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.",
                              "type": ["string", "null"]
                            }
                          }
                        },
                        "destinations": {
                          "description": "The destination to which traffic should be forwarded.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["object", "null"],
                            "properties": {
                              "serviceRef": {
                                "type": ["object", "null"],
                                "properties": {
                                  "external": {
                                    "description": "The URL of a BackendService to route traffic to.",
                                    "type": ["string", "null"]
                                  },
                                  "name": {
                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": ["string", "null"]
                                  },
                                  "namespace": {
                                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                    "type": ["string", "null"]
                                  }
                                }
                              },
                              "weight": {
                                "description": "Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.",
                                "type": ["integer", "null"],
                                "format": "int64"
                              }
                            }
                          }
                        },
                        "faultInjectionPolicy": {
                          "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced on a percentage of requests before sending those requests to the backend service. Similarly requests from clients can be aborted for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy",
                          "type": ["object", "null"],
                          "properties": {
                            "abort": {
                              "description": "The specification for aborting to client requests.",
                              "type": ["object", "null"],
                              "properties": {
                                "httpStatus": {
                                  "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
                                  "type": ["integer", "null"],
                                  "format": "int64"
                                },
                                "percentage": {
                                  "description": "The percentage of traffic which will be aborted. The value must be between [0, 100]",
                                  "type": ["integer", "null"],
                                  "format": "int64"
                                }
                              }
                            },
                            "delay": {
                              "description": "The specification for injecting delay to client requests.",
                              "type": ["object", "null"],
                              "properties": {
                                "fixedDelay": {
                                  "description": "Specify a fixed delay before forwarding the request.",
                                  "type": ["string", "null"]
                                },
                                "percentage": {
                                  "description": "The percentage of traffic on which delay will be injected. The value must be between [0, 100]",
                                  "type": ["integer", "null"],
                                  "format": "int64"
                                }
                              }
                            }
                          }
                        },
                        "originalDestination": {
                          "description": "If true, the matched traffic will use the destination ip and port of the original connection (as it was not processed by proxy) as the destination of the request. Only one of destinations, redirect, original_destination can be set.",
                          "type": ["boolean", "null"]
                        },
                        "redirect": {
                          "description": "If set, the request is directed as configured by this field.",
                          "type": ["object", "null"],
                          "properties": {
                            "hostRedirect": {
                              "description": "The host that will be used in the redirect response instead of the one that was supplied in the request.",
                              "type": ["string", "null"]
                            },
                            "httpsRedirect": {
                              "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. The default is set to false.",
                              "type": ["boolean", "null"]
                            },
                            "pathRedirect": {
                              "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. path_redirect can not be supplied together with prefix_redirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.",
                              "type": ["string", "null"]
                            },
                            "portRedirect": {
                              "description": "The port that will be used in the redirected request instead of the one that was supplied in the request.",
                              "type": ["integer", "null"],
                              "format": "int64"
                            },
                            "prefixRewrite": {
                              "description": "Indicates that during redirection, the matched prefix (or path) should be swapped with this value. This option allows URLs be dynamically created based on the request.",
                              "type": ["string", "null"]
                            },
                            "responseCode": {
                              "description": "The HTTP Status code to use for the redirect. Possible values: MOVED_PERMANENTLY_DEFAULT, FOUND, SEE_OTHER, TEMPORARY_REDIRECT, PERMANENT_REDIRECT",
                              "type": ["string", "null"]
                            },
                            "stripQuery": {
                              "description": "if set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.",
                              "type": ["boolean", "null"]
                            }
                          }
                        },
                        "requestHeaderModifier": {
                          "description": "The specification for modifying the headers of a matching request prior to delivery of the request to the destination.",
                          "type": ["object", "null"],
                          "properties": {
                            "add": {
                              "description": "Add the headers with given map where key is the name of the header, value is the value of the header.",
                              "type": ["object", "null"],
                              "additionalProperties": {
                                "type": ["string", "null"]
                              }
                            },
                            "remove": {
                              "description": "Remove headers (matching by header names) specified in the list.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "set": {
                              "description": "Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.",
                              "type": ["object", "null"],
                              "additionalProperties": {
                                "type": ["string", "null"]
                              }
                            }
                          }
                        },
                        "requestMirrorPolicy": {
                          "description": "Specifies the policy on how requests intended for the routes destination are shadowed to a separate mirrored destination. Proxy will not wait for the shadow destination to respond before returning the response. Prior to sending traffic to the shadow service, the host/authority header is suffixed with -shadow.",
                          "type": ["object", "null"],
                          "properties": {
                            "destination": {
                              "description": "The destination the requests will be mirrored to. The weight of the destination will be ignored.",
                              "type": ["object", "null"],
                              "properties": {
                                "serviceRef": {
                                  "type": ["object", "null"],
                                  "properties": {
                                    "external": {
                                      "description": "The URL of a BackendService to route traffic to.",
                                      "type": ["string", "null"]
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": ["string", "null"]
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": ["string", "null"]
                                    }
                                  }
                                },
                                "weight": {
                                  "description": "Specifies the proportion of requests forwarded to the backend referenced by the serviceName field. This is computed as: weight/Sum(weights in this destination list). For non-zero values, there may be some epsilon from the exact proportion defined here depending on the precision an implementation supports. If only one serviceName is specified and it has a weight greater than 0, 100% of the traffic is forwarded to that backend. If weights are specified for any one service name, they need to be specified for all of them. If weights are unspecified for all services, then, traffic is distributed in equal proportions to all of them.",
                                  "type": ["integer", "null"],
                                  "format": "int64"
                                }
                              }
                            }
                          }
                        },
                        "responseHeaderModifier": {
                          "description": "The specification for modifying the headers of a response prior to sending the response back to the client.",
                          "type": ["object", "null"],
                          "properties": {
                            "add": {
                              "description": "Add the headers with given map where key is the name of the header, value is the value of the header.",
                              "type": ["object", "null"],
                              "additionalProperties": {
                                "type": ["string", "null"]
                              }
                            },
                            "remove": {
                              "description": "Remove headers (matching by header names) specified in the list.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            },
                            "set": {
                              "description": "Completely overwrite/replace the headers with given map where key is the name of the header, value is the value of the header.",
                              "type": ["object", "null"],
                              "additionalProperties": {
                                "type": ["string", "null"]
                              }
                            }
                          }
                        },
                        "retryPolicy": {
                          "description": "Specifies the retry policy associated with this route.",
                          "type": ["object", "null"],
                          "properties": {
                            "numRetries": {
                              "description": "Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.",
                              "type": ["integer", "null"],
                              "format": "int64"
                            },
                            "perTryTimeout": {
                              "description": "Specifies a non-zero timeout per retry attempt.",
                              "type": ["string", "null"]
                            },
                            "retryConditions": {
                              "description": "Specifies one or more conditions when this retry policy applies. Valid values are: 5xx: Proxy will attempt a retry if the destination service responds with any 5xx response code, of if the destination service does not respond at all, example: disconnect, reset, read timeout, connection failure and refused streams. gateway-error: Similar to 5xx, but only applies to response codes 502, 503, 504. reset: Proxy will attempt a retry if the destination service does not respond at all (disconnect/reset/read timeout) connect-failure: Proxy will retry on failures connecting to destination for example due to connection timeouts. retriable-4xx: Proxy will retry fro retriable 4xx response codes. Currently the only retriable error supported is 409. refused-stream: Proxy will retry if the destination resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.",
                              "type": ["array", "null"],
                              "items": {
                                "type": ["string", "null"]
                              }
                            }
                          }
                        },
                        "timeout": {
                          "description": "Specifies the timeout for selected route. Timeout is computed from the time the request has been fully processed (i.e. end of stream) up until the response has been completely processed. Timeout includes all retries.",
                          "type": ["string", "null"]
                        },
                        "urlRewrite": {
                          "description": "The specification for rewrite URL before forwarding requests to the destination.",
                          "type": ["object", "null"],
                          "properties": {
                            "hostRewrite": {
                              "description": "Prior to forwarding the request to the selected destination, the requests host header is replaced by this value.",
                              "type": ["string", "null"]
                            },
                            "pathPrefixRewrite": {
                              "description": "Prior to forwarding the request to the selected destination, the matching portion of the requests path is replaced by this value.",
                              "type": ["string", "null"]
                            }
                          }
                        }
                      }
                    },
                    "matches": {
                      "description": "A list of matches define conditions used for matching the rule against incoming HTTP requests. Each match is independent, i.e. this rule will be matched if ANY one of the matches is satisfied.",
                      "type": ["array", "null"],
                      "items": {
                        "type": ["object", "null"],
                        "properties": {
                          "fullPathMatch": {
                            "description": "The HTTP request path value should exactly match this value. Only one of full_path_match, prefix_match, or regex_match should be used.",
                            "type": ["string", "null"]
                          },
                          "headers": {
                            "description": "Specifies a list of HTTP request headers to match against. ALL of the supplied headers must be matched.",
                            "type": ["array", "null"],
                            "items": {
                              "type": ["object", "null"],
                              "properties": {
                                "exactMatch": {
                                  "description": "The value of the header should match exactly the content of exact_match.",
                                  "type": ["string", "null"]
                                },
                                "header": {
                                  "description": "The name of the HTTP header to match against.",
                                  "type": ["string", "null"]
                                },
                                "invertMatch": {
                                  "description": "If specified, the match result will be inverted before checking. Default value is set to false.",
                                  "type": ["boolean", "null"]
                                },
                                "prefixMatch": {
                                  "description": "The value of the header must start with the contents of prefix_match.",
                                  "type": ["string", "null"]
                                },
                                "presentMatch": {
                                  "description": "A header with header_name must exist. The match takes place whether or not the header has a value.",
                                  "type": ["boolean", "null"]
                                },
                                "rangeMatch": {
                                  "description": "If specified, the rule will match if the request header value is within the range.",
                                  "type": ["object", "null"],
                                  "properties": {
                                    "end": {
                                      "description": "End of the range (exclusive)",
                                      "type": ["integer", "null"],
                                      "format": "int64"
                                    },
                                    "start": {
                                      "description": "Start of the range (inclusive)",
                                      "type": ["integer", "null"],
                                      "format": "int64"
                                    }
                                  }
                                },
                                "regexMatch": {
                                  "description": "The value of the header must match the regular expression specified in regex_match. For regular expression grammar, please see: https://github.com/google/re2/wiki/Syntax",
                                  "type": ["string", "null"]
                                },
                                "suffixMatch": {
                                  "description": "The value of the header must end with the contents of suffix_match.",
                                  "type": ["string", "null"]
                                }
                              }
                            }
                          },
                          "ignoreCase": {
                            "description": "Specifies if prefix_match and full_path_match matches are case sensitive. The default value is false.",
                            "type": ["boolean", "null"]
                          },
                          "prefixMatch": {
                            "description": "The HTTP request path value must begin with specified prefix_match. prefix_match must begin with a /. Only one of full_path_match, prefix_match, or regex_match should be used.",
                            "type": ["string", "null"]
                          },
                          "queryParameters": {
                            "description": "Specifies a list of query parameters to match against. ALL of the query parameters must be matched.",
                            "type": ["array", "null"],
                            "items": {
                              "type": ["object", "null"],
                              "properties": {
                                "exactMatch": {
                                  "description": "The value of the query parameter must exactly match the contents of exact_match. Only one of exact_match, regex_match, or present_match must be set.",
                                  "type": ["string", "null"]
                                },
                                "presentMatch": {
                                  "description": "Specifies that the QueryParameterMatcher matches if request contains query parameter, irrespective of whether the parameter has a value or not. Only one of exact_match, regex_match, or present_match must be set.",
                                  "type": ["boolean", "null"]
                                },
                                "queryParameter": {
                                  "description": "The name of the query parameter to match.",
                                  "type": ["string", "null"]
                                },
                                "regexMatch": {
                                  "description": "The value of the query parameter must match the regular expression specified by regex_match. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of exact_match, regex_match, or present_match must be set.",
                                  "type": ["string", "null"]
                                }
                              }
                            }
                          },
                          "regexMatch": {
                            "description": "The HTTP request path value must satisfy the regular expression specified by regex_match after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax Only one of full_path_match, prefix_match, or regex_match should be used.",
                            "type": ["string", "null"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "conditions": {
                "description": "Conditions represent the latest available observation of the resource's current state.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.",
                      "type": ["string", "null"]
                    },
                    "message": {
                      "description": "Human-readable message indicating details about last transition.",
                      "type": ["string", "null"]
                    },
                    "reason": {
                      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                      "type": ["string", "null"]
                    },
                    "status": {
                      "description": "Status is the status of the condition. Can be True, False, Unknown.",
                      "type": ["string", "null"]
                    },
                    "type": {
                      "description": "Type is the type of the condition.",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "createTime": {
                "description": "Output only. The timestamp when the resource was created.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                "type": ["integer", "null"]
              },
              "updateTime": {
                "description": "Output only. The timestamp when the resource was updated.",
                "type": ["string", "null"],
                "format": "date-time"
              }
            }
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "networkservices.cnrm.cloud.google.com",
            "kind": "NetworkServicesHTTPRoute",
            "version": "v1beta1"
          }
        ]
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["NetworkServicesHTTPRouteList"]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": ["object", "null"],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": ["string", "null"]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "networkservices.cnrm.cloud.google.com",
      "kind": "NetworkServicesHTTPRouteList",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}

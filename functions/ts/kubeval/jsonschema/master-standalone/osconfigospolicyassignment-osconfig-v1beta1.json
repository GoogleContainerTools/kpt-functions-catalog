{
  "type": "object",
  "required": ["spec"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["osconfig.cnrm.cloud.google.com/v1beta1"]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["OSConfigOSPolicyAssignment"]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": ["object", "null"],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": ["string", "null"]
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": ["string", "null"]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": ["array", "null"],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": ["object", "null"],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": ["string", "null"]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": ["string", "null"]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": ["object", "null"]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": ["string", "null"]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": ["string", "null"]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": ["string", "null"]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": ["string", "null"]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": ["string", "null"]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": ["array", "null"],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": ["object", "null"],
            "required": ["apiVersion", "kind", "name", "uid"],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": ["boolean", "null"]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": ["boolean", "null"]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": ["string", "null"]
        }
      }
    },
    "spec": {
      "type": ["object", "null"],
      "required": [
        "instanceFilter",
        "location",
        "osPolicies",
        "projectRef",
        "rollout"
      ],
      "properties": {
        "description": {
          "description": "OS policy assignment description. Length of the description is limited to 1024 characters.",
          "type": ["string", "null"]
        },
        "instanceFilter": {
          "description": "Required. Filter to select VMs.",
          "type": "object",
          "properties": {
            "all": {
              "description": "Target all VMs in the project. If true, no other criteria is permitted.",
              "type": ["boolean", "null"]
            },
            "exclusionLabels": {
              "description": "List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM.",
              "type": ["array", "null"],
              "items": {
                "type": ["object", "null"],
                "properties": {
                  "labels": {
                    "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                    "type": ["object", "null"],
                    "additionalProperties": {
                      "type": ["string", "null"]
                    }
                  }
                }
              }
            },
            "inclusionLabels": {
              "description": "List of label sets used for VM inclusion. If the list has more than one `LabelSet`, the VM is included if any of the label sets are applicable for the VM.",
              "type": ["array", "null"],
              "items": {
                "type": ["object", "null"],
                "properties": {
                  "labels": {
                    "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                    "type": ["object", "null"],
                    "additionalProperties": {
                      "type": ["string", "null"]
                    }
                  }
                }
              }
            },
            "inventories": {
              "description": "List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories.",
              "type": ["array", "null"],
              "items": {
                "type": ["object", "null"],
                "required": ["osShortName"],
                "properties": {
                  "osShortName": {
                    "description": "Required. The OS short name",
                    "type": "string"
                  },
                  "osVersion": {
                    "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.",
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "location": {
          "description": "The location for the resource",
          "type": "string"
        },
        "osPolicies": {
          "description": "Required. List of OS policies to be applied to the VMs.",
          "type": "array",
          "items": {
            "type": ["object", "null"],
            "required": ["id", "mode", "resourceGroups"],
            "properties": {
              "allowNoResourceGroupMatch": {
                "description": "This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.",
                "type": ["boolean", "null"]
              },
              "description": {
                "description": "Policy description. Length of the description is limited to 1024 characters.",
                "type": ["string", "null"]
              },
              "id": {
                "description": "Required. The id of the OS policy with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the assignment.",
                "type": "string"
              },
              "mode": {
                "description": "Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT",
                "type": "string"
              },
              "resourceGroups": {
                "description": "Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`",
                "type": "array",
                "items": {
                  "type": ["object", "null"],
                  "required": ["resources"],
                  "properties": {
                    "inventoryFilters": {
                      "description": "List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either `RHEL` or `CentOS` operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally.",
                      "type": ["array", "null"],
                      "items": {
                        "type": ["object", "null"],
                        "required": ["osShortName"],
                        "properties": {
                          "osShortName": {
                            "description": "Required. The OS short name",
                            "type": "string"
                          },
                          "osVersion": {
                            "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.",
                            "type": ["string", "null"]
                          }
                        }
                      }
                    },
                    "resources": {
                      "description": "Required. List of resources configured for this resource group. The resources are executed in the exact order specified here.",
                      "type": "array",
                      "items": {
                        "type": ["object", "null"],
                        "required": ["id"],
                        "properties": {
                          "exec": {
                            "description": "Exec resource",
                            "type": ["object", "null"],
                            "required": ["validate"],
                            "properties": {
                              "enforce": {
                                "description": "Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates \"in desired state\", and exit code of 101 indicates \"not in desired state\". Any other exit code indicates a failure running validate.",
                                "type": ["object", "null"],
                                "required": ["interpreter"],
                                "properties": {
                                  "args": {
                                    "description": "Optional arguments to pass to the source during execution.",
                                    "type": ["array", "null"],
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "file": {
                                    "description": "Required. A deb package.",
                                    "type": ["object", "null"],
                                    "properties": {
                                      "allowInsecure": {
                                        "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                        "type": ["boolean", "null"]
                                      },
                                      "gcs": {
                                        "description": "A Cloud Storage object.",
                                        "type": ["object", "null"],
                                        "required": ["bucket", "object"],
                                        "properties": {
                                          "bucket": {
                                            "description": "Required. Bucket of the Cloud Storage object.",
                                            "type": "string"
                                          },
                                          "generation": {
                                            "description": "Generation number of the Cloud Storage object.",
                                            "type": ["integer", "null"],
                                            "format": "int64"
                                          },
                                          "object": {
                                            "description": "Required. Name of the Cloud Storage object.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "localPath": {
                                        "description": "A local path within the VM to use.",
                                        "type": ["string", "null"]
                                      },
                                      "remote": {
                                        "description": "A generic remote file.",
                                        "type": ["object", "null"],
                                        "required": ["uri"],
                                        "properties": {
                                          "sha256Checksum": {
                                            "description": "SHA256 checksum of the remote file.",
                                            "type": ["string", "null"]
                                          },
                                          "uri": {
                                            "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "interpreter": {
                                    "description": "Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL",
                                    "type": "string"
                                  },
                                  "outputFilePath": {
                                    "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                    "type": ["string", "null"]
                                  },
                                  "script": {
                                    "description": "An inline script. The size of the script is limited to 1024 characters.",
                                    "type": ["string", "null"]
                                  }
                                }
                              },
                              "validate": {
                                "description": "Required. What to run to validate this resource is in the desired state. An exit code of 100 indicates \"in desired state\", and exit code of 101 indicates \"not in desired state\". Any other exit code indicates a failure running validate.",
                                "type": "object",
                                "required": ["interpreter"],
                                "properties": {
                                  "args": {
                                    "description": "Optional arguments to pass to the source during execution.",
                                    "type": ["array", "null"],
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "file": {
                                    "description": "Required. A deb package.",
                                    "type": ["object", "null"],
                                    "properties": {
                                      "allowInsecure": {
                                        "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                        "type": ["boolean", "null"]
                                      },
                                      "gcs": {
                                        "description": "A Cloud Storage object.",
                                        "type": ["object", "null"],
                                        "required": ["bucket", "object"],
                                        "properties": {
                                          "bucket": {
                                            "description": "Required. Bucket of the Cloud Storage object.",
                                            "type": "string"
                                          },
                                          "generation": {
                                            "description": "Generation number of the Cloud Storage object.",
                                            "type": ["integer", "null"],
                                            "format": "int64"
                                          },
                                          "object": {
                                            "description": "Required. Name of the Cloud Storage object.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "localPath": {
                                        "description": "A local path within the VM to use.",
                                        "type": ["string", "null"]
                                      },
                                      "remote": {
                                        "description": "A generic remote file.",
                                        "type": ["object", "null"],
                                        "required": ["uri"],
                                        "properties": {
                                          "sha256Checksum": {
                                            "description": "SHA256 checksum of the remote file.",
                                            "type": ["string", "null"]
                                          },
                                          "uri": {
                                            "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "interpreter": {
                                    "description": "Required. The script interpreter to use. Possible values: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL",
                                    "type": "string"
                                  },
                                  "outputFilePath": {
                                    "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                    "type": ["string", "null"]
                                  },
                                  "script": {
                                    "description": "An inline script. The size of the script is limited to 1024 characters.",
                                    "type": ["string", "null"]
                                  }
                                }
                              }
                            }
                          },
                          "file": {
                            "description": "File resource",
                            "type": ["object", "null"],
                            "required": ["path", "state"],
                            "properties": {
                              "content": {
                                "description": "A a file with this content. The size of the content is limited to 1024 characters.",
                                "type": ["string", "null"]
                              },
                              "file": {
                                "description": "Required. A deb package.",
                                "type": ["object", "null"],
                                "properties": {
                                  "allowInsecure": {
                                    "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                    "type": ["boolean", "null"]
                                  },
                                  "gcs": {
                                    "description": "A Cloud Storage object.",
                                    "type": ["object", "null"],
                                    "required": ["bucket", "object"],
                                    "properties": {
                                      "bucket": {
                                        "description": "Required. Bucket of the Cloud Storage object.",
                                        "type": "string"
                                      },
                                      "generation": {
                                        "description": "Generation number of the Cloud Storage object.",
                                        "type": ["integer", "null"],
                                        "format": "int64"
                                      },
                                      "object": {
                                        "description": "Required. Name of the Cloud Storage object.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "localPath": {
                                    "description": "A local path within the VM to use.",
                                    "type": ["string", "null"]
                                  },
                                  "remote": {
                                    "description": "A generic remote file.",
                                    "type": ["object", "null"],
                                    "required": ["uri"],
                                    "properties": {
                                      "sha256Checksum": {
                                        "description": "SHA256 checksum of the remote file.",
                                        "type": ["string", "null"]
                                      },
                                      "uri": {
                                        "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "path": {
                                "description": "Required. The absolute path of the file within the VM.",
                                "type": "string"
                              },
                              "permissions": {
                                "description": "Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4",
                                "type": ["string", "null"]
                              },
                              "state": {
                                "description": "Required. Desired state of the file. Possible values: OS_POLICY_COMPLIANCE_STATE_UNSPECIFIED, COMPLIANT, NON_COMPLIANT, UNKNOWN, NO_OS_POLICIES_APPLICABLE",
                                "type": "string"
                              }
                            }
                          },
                          "id": {
                            "description": "Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.",
                            "type": "string"
                          },
                          "pkg": {
                            "description": "Package resource",
                            "type": ["object", "null"],
                            "required": ["desiredState"],
                            "properties": {
                              "apt": {
                                "description": "A package managed by Apt.",
                                "type": ["object", "null"],
                                "required": ["name"],
                                "properties": {
                                  "name": {
                                    "description": "Required. Package name.",
                                    "type": "string"
                                  }
                                }
                              },
                              "deb": {
                                "description": "A deb package file.",
                                "type": ["object", "null"],
                                "required": ["source"],
                                "properties": {
                                  "pullDeps": {
                                    "description": "Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`",
                                    "type": ["boolean", "null"]
                                  },
                                  "source": {
                                    "description": "Required. A deb package.",
                                    "type": "object",
                                    "properties": {
                                      "allowInsecure": {
                                        "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                        "type": ["boolean", "null"]
                                      },
                                      "gcs": {
                                        "description": "A Cloud Storage object.",
                                        "type": ["object", "null"],
                                        "required": ["bucket", "object"],
                                        "properties": {
                                          "bucket": {
                                            "description": "Required. Bucket of the Cloud Storage object.",
                                            "type": "string"
                                          },
                                          "generation": {
                                            "description": "Generation number of the Cloud Storage object.",
                                            "type": ["integer", "null"],
                                            "format": "int64"
                                          },
                                          "object": {
                                            "description": "Required. Name of the Cloud Storage object.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "localPath": {
                                        "description": "A local path within the VM to use.",
                                        "type": ["string", "null"]
                                      },
                                      "remote": {
                                        "description": "A generic remote file.",
                                        "type": ["object", "null"],
                                        "required": ["uri"],
                                        "properties": {
                                          "sha256Checksum": {
                                            "description": "SHA256 checksum of the remote file.",
                                            "type": ["string", "null"]
                                          },
                                          "uri": {
                                            "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "desiredState": {
                                "description": "Required. The desired state the agent should maintain for this package. Possible values: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED",
                                "type": "string"
                              },
                              "googet": {
                                "description": "A package managed by GooGet.",
                                "type": ["object", "null"],
                                "required": ["name"],
                                "properties": {
                                  "name": {
                                    "description": "Required. Package name.",
                                    "type": "string"
                                  }
                                }
                              },
                              "msi": {
                                "description": "An MSI package.",
                                "type": ["object", "null"],
                                "required": ["source"],
                                "properties": {
                                  "properties": {
                                    "description": "Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.",
                                    "type": ["array", "null"],
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "source": {
                                    "description": "Required. A deb package.",
                                    "type": "object",
                                    "properties": {
                                      "allowInsecure": {
                                        "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                        "type": ["boolean", "null"]
                                      },
                                      "gcs": {
                                        "description": "A Cloud Storage object.",
                                        "type": ["object", "null"],
                                        "required": ["bucket", "object"],
                                        "properties": {
                                          "bucket": {
                                            "description": "Required. Bucket of the Cloud Storage object.",
                                            "type": "string"
                                          },
                                          "generation": {
                                            "description": "Generation number of the Cloud Storage object.",
                                            "type": ["integer", "null"],
                                            "format": "int64"
                                          },
                                          "object": {
                                            "description": "Required. Name of the Cloud Storage object.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "localPath": {
                                        "description": "A local path within the VM to use.",
                                        "type": ["string", "null"]
                                      },
                                      "remote": {
                                        "description": "A generic remote file.",
                                        "type": ["object", "null"],
                                        "required": ["uri"],
                                        "properties": {
                                          "sha256Checksum": {
                                            "description": "SHA256 checksum of the remote file.",
                                            "type": ["string", "null"]
                                          },
                                          "uri": {
                                            "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "rpm": {
                                "description": "An rpm package file.",
                                "type": ["object", "null"],
                                "required": ["source"],
                                "properties": {
                                  "pullDeps": {
                                    "description": "Whether dependencies should also be installed. - install when false: `rpm --upgrade --replacepkgs package.rpm` - install when true: `yum -y install package.rpm` or `zypper -y install package.rpm`",
                                    "type": ["boolean", "null"]
                                  },
                                  "source": {
                                    "description": "Required. A deb package.",
                                    "type": "object",
                                    "properties": {
                                      "allowInsecure": {
                                        "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                        "type": ["boolean", "null"]
                                      },
                                      "gcs": {
                                        "description": "A Cloud Storage object.",
                                        "type": ["object", "null"],
                                        "required": ["bucket", "object"],
                                        "properties": {
                                          "bucket": {
                                            "description": "Required. Bucket of the Cloud Storage object.",
                                            "type": "string"
                                          },
                                          "generation": {
                                            "description": "Generation number of the Cloud Storage object.",
                                            "type": ["integer", "null"],
                                            "format": "int64"
                                          },
                                          "object": {
                                            "description": "Required. Name of the Cloud Storage object.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "localPath": {
                                        "description": "A local path within the VM to use.",
                                        "type": ["string", "null"]
                                      },
                                      "remote": {
                                        "description": "A generic remote file.",
                                        "type": ["object", "null"],
                                        "required": ["uri"],
                                        "properties": {
                                          "sha256Checksum": {
                                            "description": "SHA256 checksum of the remote file.",
                                            "type": ["string", "null"]
                                          },
                                          "uri": {
                                            "description": "Required. URI from which to fetch the object. It should contain both the protocol and path following the format `{protocol}://{location}`.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "yum": {
                                "description": "A package managed by YUM.",
                                "type": ["object", "null"],
                                "required": ["name"],
                                "properties": {
                                  "name": {
                                    "description": "Required. Package name.",
                                    "type": "string"
                                  }
                                }
                              },
                              "zypper": {
                                "description": "A package managed by Zypper.",
                                "type": ["object", "null"],
                                "required": ["name"],
                                "properties": {
                                  "name": {
                                    "description": "Required. Package name.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "repository": {
                            "description": "Package repository resource",
                            "type": ["object", "null"],
                            "properties": {
                              "apt": {
                                "description": "An Apt Repository.",
                                "type": ["object", "null"],
                                "required": [
                                  "archiveType",
                                  "components",
                                  "distribution",
                                  "uri"
                                ],
                                "properties": {
                                  "archiveType": {
                                    "description": "Required. Type of archive files in this repository. Possible values: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC",
                                    "type": "string"
                                  },
                                  "components": {
                                    "description": "Required. List of components for this repository. Must contain at least one item.",
                                    "type": "array",
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "distribution": {
                                    "description": "Required. Distribution of this repository.",
                                    "type": "string"
                                  },
                                  "gpgKey": {
                                    "description": "URI of the key file for this repository. The agent maintains a keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.",
                                    "type": ["string", "null"]
                                  },
                                  "uri": {
                                    "description": "Required. URI for this repository.",
                                    "type": "string"
                                  }
                                }
                              },
                              "goo": {
                                "description": "A Goo Repository.",
                                "type": ["object", "null"],
                                "required": ["name", "url"],
                                "properties": {
                                  "name": {
                                    "description": "Required. The name of the repository.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "Required. The url of the repository.",
                                    "type": "string"
                                  }
                                }
                              },
                              "yum": {
                                "description": "A Yum Repository.",
                                "type": ["object", "null"],
                                "required": ["baseUrl", "id"],
                                "properties": {
                                  "baseUrl": {
                                    "description": "Required. The location of the repository directory.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The display name of the repository.",
                                    "type": ["string", "null"]
                                  },
                                  "gpgKeys": {
                                    "description": "URIs of GPG keys.",
                                    "type": ["array", "null"],
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "id": {
                                    "description": "Required. A one word, unique name for this repository. This is the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for resource conflicts.",
                                    "type": "string"
                                  }
                                }
                              },
                              "zypper": {
                                "description": "A Zypper Repository.",
                                "type": ["object", "null"],
                                "required": ["baseUrl", "id"],
                                "properties": {
                                  "baseUrl": {
                                    "description": "Required. The location of the repository directory.",
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "description": "The display name of the repository.",
                                    "type": ["string", "null"]
                                  },
                                  "gpgKeys": {
                                    "description": "URIs of GPG keys.",
                                    "type": ["array", "null"],
                                    "items": {
                                      "type": ["string", "null"]
                                    }
                                  },
                                  "id": {
                                    "description": "Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource",
              "type": ["string", "null"]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": ["string", "null"]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": ["string", "null"]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": ["string", "null"]
        },
        "rollout": {
          "description": "Required. Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted.",
          "type": "object",
          "required": ["disruptionBudget", "minWaitDuration"],
          "properties": {
            "disruptionBudget": {
              "description": "Required. The maximum number (or percentage) of VMs per zone to disrupt at any given moment.",
              "type": "object",
              "properties": {
                "fixed": {
                  "description": "Specifies a fixed value.",
                  "type": ["integer", "null"],
                  "format": "int64"
                },
                "percent": {
                  "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
                  "type": ["integer", "null"],
                  "format": "int64"
                }
              }
            },
            "minWaitDuration": {
              "description": "Required. This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the `disruption_budget` at least until this duration of time has passed after configuration changes are applied.",
              "type": "string"
            }
          }
        }
      }
    },
    "status": {
      "type": ["object", "null"],
      "properties": {
        "baseline": {
          "description": "Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.",
          "type": ["boolean", "null"]
        },
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": ["string", "null"]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": ["string", "null"]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": ["string", "null"]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": ["string", "null"]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": ["string", "null"]
              }
            }
          }
        },
        "deleted": {
          "description": "Output only. Indicates that this revision deletes the OS policy assignment.",
          "type": ["boolean", "null"]
        },
        "etag": {
          "description": "The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.",
          "type": ["string", "null"]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": ["integer", "null"]
        },
        "reconciling": {
          "description": "Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING",
          "type": ["boolean", "null"]
        },
        "revisionCreateTime": {
          "description": "Output only. The timestamp that the revision was created.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "revisionId": {
          "description": "Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment",
          "type": ["string", "null"]
        },
        "rolloutState": {
          "description": "Output only. OS policy assignment rollout state Possible values: ROLLOUT_STATE_UNSPECIFIED, IN_PROGRESS, CANCELLING, CANCELLED, SUCCEEDED",
          "type": ["string", "null"]
        },
        "uid": {
          "description": "Output only. Server generated unique id for the OS policy assignment resource.",
          "type": ["string", "null"]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "osconfig.cnrm.cloud.google.com",
      "kind": "OSConfigOSPolicyAssignment",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}

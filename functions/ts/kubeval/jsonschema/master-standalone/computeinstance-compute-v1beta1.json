{
  "type": "object",
  "required": ["spec"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["compute.cnrm.cloud.google.com/v1beta1"]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["ComputeInstance"]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": ["object", "null"],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": ["string", "null"]
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": ["string", "null"]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": ["array", "null"],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": ["object", "null"],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": ["string", "null"]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": ["string", "null"]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": ["object", "null"]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": ["string", "null"]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": ["string", "null"]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": ["string", "null"]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": ["string", "null"]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": ["string", "null"]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": ["array", "null"],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": ["object", "null"],
            "required": ["apiVersion", "kind", "name", "uid"],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": ["boolean", "null"]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": ["boolean", "null"]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": ["string", "null"]
        }
      }
    },
    "spec": {
      "type": ["object", "null"],
      "properties": {
        "advancedMachineFeatures": {
          "description": "Controls for advanced machine-related behavior features.",
          "type": ["object", "null"],
          "properties": {
            "enableNestedVirtualization": {
              "description": "Whether to enable nested virtualization or not.",
              "type": ["boolean", "null"]
            },
            "threadsPerCore": {
              "description": "The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.",
              "type": ["integer", "null"]
            }
          }
        },
        "attachedDisk": {
          "description": "List of disks attached to the instance.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "required": ["sourceDiskRef"],
            "properties": {
              "deviceName": {
                "description": "Name with which the attached disk is accessible under /dev/disk/by-id/.",
                "type": ["string", "null"]
              },
              "diskEncryptionKeyRaw": {
                "description": "A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.",
                "type": ["object", "null"],
                "properties": {
                  "value": {
                    "description": "Value of the field. Cannot be used if 'valueFrom' is specified.",
                    "type": ["string", "null"]
                  },
                  "valueFrom": {
                    "description": "Source for the field's value. Cannot be used if 'value' is specified.",
                    "type": ["object", "null"],
                    "properties": {
                      "secretKeyRef": {
                        "description": "Reference to a value with the given key in the given Secret in the resource's namespace.",
                        "type": ["object", "null"],
                        "required": ["name", "key"],
                        "properties": {
                          "key": {
                            "description": "Key that identifies the value to be extracted.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the Secret to extract a value from.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "diskEncryptionKeySha256": {
                "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
                "type": ["string", "null"]
              },
              "kmsKeyRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The selfLink of a KMSCryptoKey.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              },
              "mode": {
                "description": "Read/write mode for the disk. One of \"READ_ONLY\" or \"READ_WRITE\".",
                "type": ["string", "null"]
              },
              "sourceDiskRef": {
                "type": "object",
                "properties": {
                  "external": {
                    "description": "The selfLink of a ComputeDisk.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "bootDisk": {
          "description": "Immutable. The boot disk for the instance.",
          "type": ["object", "null"],
          "properties": {
            "autoDelete": {
              "description": "Immutable. Whether the disk will be auto-deleted when the instance is deleted.",
              "type": ["boolean", "null"]
            },
            "deviceName": {
              "description": "Immutable. Name with which attached disk will be accessible under /dev/disk/by-id/.",
              "type": ["string", "null"]
            },
            "diskEncryptionKeyRaw": {
              "description": "Immutable. A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.",
              "type": ["object", "null"],
              "properties": {
                "value": {
                  "description": "Value of the field. Cannot be used if 'valueFrom' is specified.",
                  "type": ["string", "null"]
                },
                "valueFrom": {
                  "description": "Source for the field's value. Cannot be used if 'value' is specified.",
                  "type": ["object", "null"],
                  "properties": {
                    "secretKeyRef": {
                      "description": "Reference to a value with the given key in the given Secret in the resource's namespace.",
                      "type": ["object", "null"],
                      "required": ["name", "key"],
                      "properties": {
                        "key": {
                          "description": "Key that identifies the value to be extracted.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the Secret to extract a value from.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "diskEncryptionKeySha256": {
              "description": "The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.",
              "type": ["string", "null"]
            },
            "initializeParams": {
              "description": "Immutable. Parameters with which a disk was created alongside the instance.",
              "type": ["object", "null"],
              "properties": {
                "labels": {
                  "description": "Immutable. A set of key/value label pairs assigned to the disk.",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "size": {
                  "description": "Immutable. The size of the image in gigabytes.",
                  "type": ["integer", "null"]
                },
                "sourceImageRef": {
                  "type": ["object", "null"],
                  "properties": {
                    "external": {
                      "description": "The selfLink of a ComputeImage.",
                      "type": ["string", "null"]
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": ["string", "null"]
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": ["string", "null"]
                    }
                  }
                },
                "type": {
                  "description": "Immutable. The Google Compute Engine disk type. One of pd-standard, pd-ssd or pd-balanced.",
                  "type": ["string", "null"]
                }
              }
            },
            "kmsKeyRef": {
              "type": ["object", "null"],
              "properties": {
                "external": {
                  "description": "The selfLink of a KMSCryptoKey.",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": ["string", "null"]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": ["string", "null"]
                }
              }
            },
            "mode": {
              "description": "Immutable. Read/write mode for the disk. One of \"READ_ONLY\" or \"READ_WRITE\".",
              "type": ["string", "null"]
            },
            "sourceDiskRef": {
              "type": ["object", "null"],
              "properties": {
                "external": {
                  "description": "The selfLink of a ComputeDisk.",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": ["string", "null"]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": ["string", "null"]
                }
              }
            }
          }
        },
        "canIpForward": {
          "description": "Whether sending and receiving of packets with non-matching source or destination IPs is allowed.",
          "type": ["boolean", "null"]
        },
        "confidentialInstanceConfig": {
          "description": "Immutable. The Confidential VM config being used by the instance.  on_host_maintenance has to be set to TERMINATE or this will fail to create.",
          "type": ["object", "null"],
          "required": ["enableConfidentialCompute"],
          "properties": {
            "enableConfidentialCompute": {
              "description": "Defines whether the instance should have confidential compute enabled.",
              "type": "boolean"
            }
          }
        },
        "deletionProtection": {
          "description": "Whether deletion protection is enabled on this instance.",
          "type": ["boolean", "null"]
        },
        "description": {
          "description": "Immutable. A brief description of the resource.",
          "type": ["string", "null"]
        },
        "desiredStatus": {
          "description": "Desired status of the instance. Either \"RUNNING\" or \"TERMINATED\".",
          "type": ["string", "null"]
        },
        "enableDisplay": {
          "description": "Whether the instance has virtual displays enabled.",
          "type": ["boolean", "null"]
        },
        "guestAccelerator": {
          "description": "Immutable. List of the type and count of accelerator cards attached to the instance.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "required": ["count", "type"],
            "properties": {
              "count": {
                "description": "Immutable. The number of the guest accelerator cards exposed to this instance.",
                "type": "integer"
              },
              "type": {
                "description": "Immutable. The accelerator type resource exposed to this instance. E.g. nvidia-tesla-k80.",
                "type": "string"
              }
            }
          }
        },
        "hostname": {
          "description": "Immutable. A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid. Valid format is a series of labels 1-63 characters long matching the regular expression [a-z]([-a-z0-9]*[a-z0-9]), concatenated with periods. The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.",
          "type": ["string", "null"]
        },
        "instanceTemplateRef": {
          "type": ["object", "null"],
          "properties": {
            "external": {
              "description": "The selfLink of a ComputeInstanceTemplate.",
              "type": ["string", "null"]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": ["string", "null"]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": ["string", "null"]
            }
          }
        },
        "machineType": {
          "description": "The machine type to create.",
          "type": ["string", "null"]
        },
        "metadata": {
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "required": ["key", "value"],
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "metadataStartupScript": {
          "description": "Immutable. Metadata startup scripts made available within the instance.",
          "type": ["string", "null"]
        },
        "minCpuPlatform": {
          "description": "The minimum CPU platform specified for the VM instance.",
          "type": ["string", "null"]
        },
        "networkInterface": {
          "description": "Immutable. The networks attached to the instance.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "accessConfig": {
                "description": "Access configurations, i.e. IPs via which this instance can be accessed via the Internet.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "natIpRef": {
                      "type": ["object", "null"],
                      "properties": {
                        "external": {
                          "description": "The address of a ComputeAddress.",
                          "type": ["string", "null"]
                        },
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": ["string", "null"]
                        },
                        "namespace": {
                          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": ["string", "null"]
                        }
                      }
                    },
                    "networkTier": {
                      "description": "The networking tier used for configuring this instance. One of PREMIUM or STANDARD.",
                      "type": ["string", "null"]
                    },
                    "publicPtrDomainName": {
                      "description": "The DNS domain name for the public PTR record.",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "aliasIpRange": {
                "description": "An array of alias IP ranges for this network interface.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "required": ["ipCidrRange"],
                  "properties": {
                    "ipCidrRange": {
                      "description": "The IP CIDR range represented by this alias IP range.",
                      "type": "string"
                    },
                    "subnetworkRangeName": {
                      "description": "The subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range.",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "ipv6AccessConfig": {
                "description": "An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "required": ["networkTier"],
                  "properties": {
                    "externalIpv6": {
                      "description": "The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically.",
                      "type": ["string", "null"]
                    },
                    "externalIpv6PrefixLength": {
                      "description": "The prefix length of the external IPv6 range.",
                      "type": ["string", "null"]
                    },
                    "networkTier": {
                      "description": "The service-level to be provided for IPv6 traffic when the subnet has an external subnet. Only PREMIUM tier is valid for IPv6.",
                      "type": "string"
                    },
                    "publicPtrDomainName": {
                      "description": "The domain name to be used when creating DNSv6 records for the external IPv6 ranges.",
                      "type": ["string", "null"]
                    }
                  }
                }
              },
              "ipv6AccessType": {
                "description": "One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork.",
                "type": ["string", "null"]
              },
              "name": {
                "description": "The name of the interface.",
                "type": ["string", "null"]
              },
              "networkIp": {
                "description": "The private IP address assigned to the instance.",
                "type": ["string", "null"]
              },
              "networkRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The selfLink of a ComputeNetwork.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              },
              "nicType": {
                "description": "Immutable. The type of vNIC to be used on this interface. Possible values:GVNIC, VIRTIO_NET.",
                "type": ["string", "null"]
              },
              "queueCount": {
                "description": "Immutable. The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It will be empty if not specified.",
                "type": ["integer", "null"]
              },
              "stackType": {
                "description": "The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used.",
                "type": ["string", "null"]
              },
              "subnetworkProject": {
                "description": "The project in which the subnetwork belongs.",
                "type": ["string", "null"]
              },
              "subnetworkRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The selfLink of a ComputeSubnetwork.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "networkPerformanceConfig": {
          "description": "Immutable. Configures network performance settings for the instance. If not specified, the instance will be created with its default network performance configuration.",
          "type": ["object", "null"],
          "required": ["totalEgressBandwidthTier"],
          "properties": {
            "totalEgressBandwidthTier": {
              "description": "Immutable. The egress bandwidth tier to enable. Possible values:TIER_1, DEFAULT.",
              "type": "string"
            }
          }
        },
        "reservationAffinity": {
          "description": "Immutable. Specifies the reservations that this instance can consume from.",
          "type": ["object", "null"],
          "required": ["type"],
          "properties": {
            "specificReservation": {
              "description": "Immutable. Specifies the label selector for the reservation to use.",
              "type": ["object", "null"],
              "required": ["key", "values"],
              "properties": {
                "key": {
                  "description": "Immutable. Corresponds to the label key of a reservation resource. To target a SPECIFIC_RESERVATION by name, specify compute.googleapis.com/reservation-name as the key and specify the name of your reservation as the only value.",
                  "type": "string"
                },
                "values": {
                  "description": "Immutable. Corresponds to the label values of a reservation resource.",
                  "type": "array",
                  "items": {
                    "type": ["string", "null"]
                  }
                }
              }
            },
            "type": {
              "description": "Immutable. The type of reservation from which this instance can consume resources.",
              "type": "string"
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": ["string", "null"]
        },
        "resourcePolicies": {
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "external": {
                "description": "The selfLink of a ComputeResourcePolicy.",
                "type": ["string", "null"]
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": ["string", "null"]
              },
              "namespace": {
                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                "type": ["string", "null"]
              }
            }
          }
        },
        "scheduling": {
          "description": "The scheduling strategy being used by the instance.",
          "type": ["object", "null"],
          "properties": {
            "automaticRestart": {
              "description": "Specifies if the instance should be restarted if it was terminated by Compute Engine (not a user).",
              "type": ["boolean", "null"]
            },
            "minNodeCpus": {
              "type": ["integer", "null"]
            },
            "nodeAffinities": {
              "type": ["array", "null"],
              "items": {
                "type": ["object", "null"],
                "properties": {
                  "value": {
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                }
              }
            },
            "onHostMaintenance": {
              "description": "Describes maintenance behavior for the instance. One of MIGRATE or TERMINATE,.",
              "type": ["string", "null"]
            },
            "preemptible": {
              "description": "Immutable. Whether the instance is preemptible.",
              "type": ["boolean", "null"]
            }
          }
        },
        "scratchDisk": {
          "description": "Immutable. The scratch disks attached to the instance.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "required": ["interface"],
            "properties": {
              "interface": {
                "description": "The disk interface used for attaching this disk. One of SCSI or NVME.",
                "type": "string"
              }
            }
          }
        },
        "serviceAccount": {
          "description": "The service account to attach to the instance.",
          "type": ["object", "null"],
          "required": ["scopes"],
          "properties": {
            "scopes": {
              "description": "A list of service scopes.",
              "type": "array",
              "items": {
                "type": ["string", "null"]
              }
            },
            "serviceAccountRef": {
              "type": ["object", "null"],
              "properties": {
                "external": {
                  "description": "The email of an IAMServiceAccount.",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": ["string", "null"]
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": ["string", "null"]
                }
              }
            }
          }
        },
        "shieldedInstanceConfig": {
          "description": "The shielded vm config being used by the instance.",
          "type": ["object", "null"],
          "properties": {
            "enableIntegrityMonitoring": {
              "description": "Whether integrity monitoring is enabled for the instance.",
              "type": ["boolean", "null"]
            },
            "enableSecureBoot": {
              "description": "Whether secure boot is enabled for the instance.",
              "type": ["boolean", "null"]
            },
            "enableVtpm": {
              "description": "Whether the instance uses vTPM.",
              "type": ["boolean", "null"]
            }
          }
        },
        "tags": {
          "description": "The list of tags attached to the instance.",
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          }
        },
        "zone": {
          "description": "Immutable. The zone of the instance. If self_link is provided, this value is ignored. If neither self_link nor zone are provided, the provider zone is used.",
          "type": ["string", "null"]
        }
      }
    },
    "status": {
      "type": ["object", "null"],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": ["string", "null"]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": ["string", "null"]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": ["string", "null"]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": ["string", "null"]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": ["string", "null"]
              }
            }
          }
        },
        "cpuPlatform": {
          "description": "The CPU platform used by this instance.",
          "type": ["string", "null"]
        },
        "currentStatus": {
          "description": "Current status of the instance.",
          "type": ["string", "null"]
        },
        "instanceId": {
          "description": "The server-assigned unique identifier of this instance.",
          "type": ["string", "null"]
        },
        "labelFingerprint": {
          "description": "The unique fingerprint of the labels.",
          "type": ["string", "null"]
        },
        "metadataFingerprint": {
          "description": "The unique fingerprint of the metadata.",
          "type": ["string", "null"]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": ["integer", "null"]
        },
        "selfLink": {
          "description": "The URI of the created resource.",
          "type": ["string", "null"]
        },
        "tagsFingerprint": {
          "description": "The unique fingerprint of the tags.",
          "type": ["string", "null"]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputeInstance",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}

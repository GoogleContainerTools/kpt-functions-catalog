{
  "type": "object",
  "required": ["spec"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["compute.cnrm.cloud.google.com/v1beta1"]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["ComputeInstanceGroupManager"]
    },
    "metadata": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": ["object", "null"],
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": ["string", "null"]
        },
        "creationTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "deletionTimestamp": {
          "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
          "type": ["string", "null"],
          "format": "date-time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": ["array", "null"],
          "items": {
            "type": ["string", "null"]
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": ["string", "null"]
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": ["object", "null"],
          "additionalProperties": {
            "type": ["string", "null"]
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": ["array", "null"],
          "items": {
            "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
            "type": ["object", "null"],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                "type": ["string", "null"]
              },
              "fieldsType": {
                "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                "type": ["string", "null"]
              },
              "fieldsV1": {
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                "type": ["object", "null"]
              },
              "manager": {
                "description": "Manager is an identifier of the workflow managing these fields.",
                "type": ["string", "null"]
              },
              "operation": {
                "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                "type": ["string", "null"]
              },
              "subresource": {
                "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                "type": ["string", "null"]
              },
              "time": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              }
            }
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": ["string", "null"]
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": ["string", "null"]
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": ["array", "null"],
          "items": {
            "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
            "type": ["object", "null"],
            "required": ["apiVersion", "kind", "name", "uid"],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "blockOwnerDeletion": {
                "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                "type": ["boolean", "null"]
              },
              "controller": {
                "description": "If true, this reference points to the managing controller.",
                "type": ["boolean", "null"]
              },
              "kind": {
                "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": ["string", "null"]
        }
      }
    },
    "spec": {
      "type": ["object", "null"],
      "required": ["projectRef"],
      "properties": {
        "autoHealingPolicies": {
          "description": "The autohealing policy for this managed instance group. You can specify only one value.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "healthCheckRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The URL for the health check that signals autohealing.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              },
              "initialDelaySec": {
                "description": "The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].",
                "type": ["integer", "null"],
                "format": "int64"
              }
            }
          }
        },
        "baseInstanceName": {
          "description": "The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).",
          "type": ["string", "null"]
        },
        "description": {
          "description": "An optional description of this resource.",
          "type": ["string", "null"]
        },
        "distributionPolicy": {
          "description": "Policy specifying the intended distribution of managed instances across zones in a regional managed instance group.",
          "type": ["object", "null"],
          "properties": {
            "targetShape": {
              "description": "The distribution shape to which the group converges either proactively or on resize events (depending on the value set in `updatePolicy.instanceRedistributionType`). Possible values: TARGET_SHAPE_UNSPECIFIED, ANY, BALANCED, ANY_SINGLE_ZONE",
              "type": ["string", "null"]
            },
            "zones": {
              "description": "Zones where the regional managed instance group will create and manage its instances.",
              "type": ["array", "null"],
              "items": {
                "type": ["object", "null"],
                "properties": {
                  "zone": {
                    "description": "The URL of the [zone](/compute/docs/regions-zones/#available). The zone must exist in the region where the managed instance group is located.",
                    "type": ["string", "null"]
                  }
                }
              }
            }
          }
        },
        "failoverAction": {
          "description": "The action to perform in case of zone failure. Only one value is supported, `NO_FAILOVER`. The default is `NO_FAILOVER`. Possible values: UNKNOWN, NO_FAILOVER",
          "type": ["string", "null"]
        },
        "instanceTemplateRef": {
          "type": ["object", "null"],
          "properties": {
            "external": {
              "description": "The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run `recreateInstances`, run `applyUpdatesToInstances`, or set the group's `updatePolicy.type` to `PROACTIVE`.",
              "type": ["string", "null"]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": ["string", "null"]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": ["string", "null"]
            }
          }
        },
        "location": {
          "description": "The location of this resource.",
          "type": ["string", "null"]
        },
        "namedPorts": {
          "description": "Named ports configured for the Instance Groups complementary to this Instance Group Manager.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "name": {
                "description": "The name for this named port. The name must be 1-63 characters long, and comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt).",
                "type": ["string", "null"]
              },
              "port": {
                "description": "The port number, which can be a value between 1 and 65535.",
                "type": ["integer", "null"],
                "format": "int64"
              }
            }
          }
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "properties": {
            "external": {
              "description": "The project for the resource",
              "type": ["string", "null"]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": ["string", "null"]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": ["string", "null"]
            }
          }
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": ["string", "null"]
        },
        "serviceAccountRef": {
          "type": ["object", "null"],
          "properties": {
            "external": {
              "description": "The service account to be used as credentials for all operations performed by the managed instance group on instances. The service accounts needs all permissions required to create and delete instances. By default, the service account: {projectNumber}@cloudservices.gserviceaccount.com is used.",
              "type": ["string", "null"]
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": ["string", "null"]
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": ["string", "null"]
            }
          }
        },
        "statefulPolicy": {
          "description": "Stateful configuration for this Instanced Group Manager",
          "type": ["object", "null"],
          "properties": {
            "preservedState": {
              "type": ["object", "null"],
              "properties": {
                "disks": {
                  "description": "Disks created on the instances that will be preserved on instance delete, update, etc. This map is keyed with the device names of the disks.",
                  "type": ["object", "null"],
                  "additionalProperties": {
                    "type": ["object", "null"],
                    "properties": {
                      "autoDelete": {
                        "description": "These stateful disks will never be deleted during autohealing, update or VM instance recreate operations. This flag is used to configure if the disk should be deleted after it is no longer used by the group, e.g. when the given instance or the whole group is deleted. Note: disks attached in READ_ONLY mode cannot be auto-deleted. Possible values: NEVER, ON_PERMANENT_INSTANCE_DELETION",
                        "type": ["string", "null"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "targetPools": {
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "external": {
                "type": ["string", "null"]
              },
              "name": {
                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": ["string", "null"]
              },
              "namespace": {
                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                "type": ["string", "null"]
              }
            }
          }
        },
        "targetSize": {
          "description": "The target number of running instances for this managed instance group. You can reduce this number by using the instanceGroupManager deleteInstances or abandonInstances methods. Resizing the group also changes this number.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "updatePolicy": {
          "description": "The update policy for this managed instance group.",
          "type": ["object", "null"],
          "properties": {
            "instanceRedistributionType": {
              "description": "The [instance redistribution policy](/compute/docs/instance-groups/regional-migs#proactive_instance_redistribution) for regional managed instance groups. Valid values are: - `PROACTIVE` (default): The group attempts to maintain an even distribution of VM instances across zones in the region. - `NONE`: For non-autoscaled groups, proactive redistribution is disabled.",
              "type": ["string", "null"]
            },
            "maxSurge": {
              "description": "Specifies the intended number of instances to be created from the `instanceTemplate`. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either `targetSize.fixed` or `instanceGroupManager.targetSize` is used. - if expressed as a `percent`, the `targetSize` would be `(targetSize.percent/100 * InstanceGroupManager.targetSize)` If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another `version`. Read [Starting a canary update](/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups#starting_a_canary_update) for more information.",
              "type": ["object", "null"],
              "properties": {
                "fixed": {
                  "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
                  "type": ["integer", "null"],
                  "format": "int64"
                },
                "percent": {
                  "description": "Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify `80` for 80%.",
                  "type": ["integer", "null"],
                  "format": "int64"
                }
              }
            },
            "maxUnavailable": {
              "description": "Specifies the intended number of instances to be created from the `instanceTemplate`. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either `targetSize.fixed` or `instanceGroupManager.targetSize` is used. - if expressed as a `percent`, the `targetSize` would be `(targetSize.percent/100 * InstanceGroupManager.targetSize)` If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another `version`. Read [Starting a canary update](/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups#starting_a_canary_update) for more information.",
              "type": ["object", "null"],
              "properties": {
                "fixed": {
                  "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
                  "type": ["integer", "null"],
                  "format": "int64"
                },
                "percent": {
                  "description": "Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify `80` for 80%.",
                  "type": ["integer", "null"],
                  "format": "int64"
                }
              }
            },
            "minReadySec": {
              "description": "Minimum number of seconds to wait for after a newly created instance becomes available. This value must be from range [0, 3600].",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "minimalAction": {
              "description": "Minimal action to be taken on an instance. You can specify either `RESTART` to restart existing instances or `REPLACE` to delete and create new instances from the target template. If you specify a `RESTART`, the Updater will attempt to perform that action only. However, if the Updater determines that the minimal action you specify is not enough to perform the update, it might perform a more disruptive action.",
              "type": ["string", "null"]
            },
            "mostDisruptiveAllowedAction": {
              "description": "Most disruptive action that is allowed to be taken on an instance. You can specify either `NONE` to forbid any actions, `REFRESH` to allow actions that do not need instance restart, `RESTART` to allow actions that can be applied without instance replacing or `REPLACE` to allow all possible actions. If the Updater determines that the minimal update action needed is more disruptive than most disruptive allowed action you specify it will not perform the update at all.",
              "type": ["string", "null"]
            },
            "replacementMethod": {
              "description": "What action should be used to replace instances. See minimal_action.REPLACE Possible values: SUBSTITUTE, RECREATE",
              "type": ["string", "null"]
            },
            "type": {
              "description": "The type of update process. You can specify either `PROACTIVE` so that the instance group manager proactively executes actions in order to bring instances to their target versions or `OPPORTUNISTIC` so that no action is proactively executed but the update will be performed as part of other actions (for example, resizes or `recreateInstances` calls).",
              "type": ["string", "null"]
            }
          }
        },
        "versions": {
          "description": "Specifies the instance templates used by this managed instance group to create instances. Each version is defined by an `instanceTemplate` and a `name`. Every version can appear at most once per instance group. This field overrides the top-level `instanceTemplate` field. Read more about the [relationships between these fields](/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups#relationship_between_versions_and_instancetemplate_properties_for_a_managed_instance_group). Exactly one `version` must leave the `targetSize` field unset. That version will be applied to all remaining instances. For more information, read about [canary updates](/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups#starting_a_canary_update).",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "instanceTemplateRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The URL of the instance template that is specified for this managed instance group. The group uses this template to create new instances in the managed instance group until the `targetSize` for this version is reached. The templates for existing instances in the group do not change unless you run `recreateInstances`, run `applyUpdatesToInstances`, or set the group's `updatePolicy.type` to `PROACTIVE`; in those cases, existing instances are updated until the `targetSize` for this version is reached.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                }
              },
              "name": {
                "description": "Name of the version. Unique among all versions in the scope of this managed instance group.",
                "type": ["string", "null"]
              },
              "targetSize": {
                "description": "Specifies the intended number of instances to be created from the `instanceTemplate`. The final number of instances created from the template will be equal to: - If expressed as a fixed number, the minimum of either `targetSize.fixed` or `instanceGroupManager.targetSize` is used. - if expressed as a `percent`, the `targetSize` would be `(targetSize.percent/100 * InstanceGroupManager.targetSize)` If there is a remainder, the number is rounded. If unset, this version will update any remaining instances not updated by another `version`. Read [Starting a canary update](/compute/docs/instance-groups/rolling-out-updates-to-managed-instance-groups#starting_a_canary_update) for more information.",
                "type": ["object", "null"],
                "properties": {
                  "calculated": {
                    "description": "[Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value. - If the value is a `percent`, then the `calculated` value is `percent`/100 * `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded.",
                    "type": ["integer", "null"],
                    "format": "int64"
                  },
                  "fixed": {
                    "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
                    "type": ["integer", "null"],
                    "format": "int64"
                  },
                  "percent": {
                    "description": "Specifies a percentage of instances between 0 to 100%, inclusive. For example, specify `80` for 80%.",
                    "type": ["integer", "null"],
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "status": {
      "type": ["object", "null"],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": ["array", "null"],
          "items": {
            "type": ["object", "null"],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": ["string", "null"]
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": ["string", "null"]
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": ["string", "null"]
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": ["string", "null"]
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": ["string", "null"]
              }
            }
          }
        },
        "creationTimestamp": {
          "description": "The creation timestamp for this managed instance group in \\[RFC3339\\](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": ["string", "null"]
        },
        "currentActions": {
          "description": "[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.",
          "type": ["object", "null"],
          "properties": {
            "abandoning": {
              "description": "[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "creating": {
              "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the `creatingWithoutRetries` field will be populated.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "creatingWithoutRetries": {
              "description": "[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's `targetSize` value accordingly.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "deleting": {
              "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "none": {
              "description": "[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "recreating": {
              "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "refreshing": {
              "description": "[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "restarting": {
              "description": "[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.",
              "type": ["integer", "null"],
              "format": "int64"
            },
            "verifying": {
              "description": "[Output Only] The number of instances in the managed instance group that are being verified. See the `managedInstances[].currentAction` property in the `listManagedInstances` method documentation.",
              "type": ["integer", "null"],
              "format": "int64"
            }
          }
        },
        "fingerprint": {
          "description": "Fingerprint of this resource. This field may be used in optimistic locking. It will be ignored when inserting an InstanceGroupManager. An up-to-date fingerprint must be provided in order to update the InstanceGroupManager, otherwise the request will fail with error `412 conditionNotMet`. To see the latest fingerprint, make a `get()` request to retrieve an InstanceGroupManager.",
          "type": ["string", "null"]
        },
        "id": {
          "description": "[Output Only] A unique identifier for this resource type. The server generates this identifier.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "instanceGroup": {
          "description": "[Output Only] The URL of the Instance Group resource.",
          "type": ["string", "null"]
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": ["integer", "null"]
        },
        "region": {
          "description": "[Output Only] The URL of the [region](/compute/docs/regions-zones/#available) where the managed instance group resides (for regional resources).",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "[Output Only] The URL for this managed instance group. The server defines this URL.",
          "type": ["string", "null"]
        },
        "status": {
          "description": "[Output Only] The status of this managed instance group.",
          "type": ["object", "null"],
          "properties": {
            "autoscaler": {
              "description": "[Output Only] The URL of the [Autoscaler](/compute/docs/autoscaler/) that targets this instance group manager.",
              "type": ["string", "null"]
            },
            "isStable": {
              "description": "[Output Only] A bit indicating whether the managed instance group is in a stable state. A stable state means that: none of the instances in the managed instance group is currently undergoing any type of change (for example, creation, restart, or deletion); no future changes are scheduled for instances in the managed instance group; and the managed instance group itself is not being modified.",
              "type": ["boolean", "null"]
            },
            "stateful": {
              "description": "[Output Only] Stateful status of the given Instance Group Manager.",
              "type": ["object", "null"],
              "properties": {
                "hasStatefulConfig": {
                  "description": "[Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful config even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions.",
                  "type": ["boolean", "null"]
                },
                "isStateful": {
                  "description": "[Output Only] A bit indicating whether the managed instance group has stateful configuration, that is, if you have configured any items in a stateful policy or in per-instance configs. The group might report that it has no stateful config even when there is still some preserved state on a managed instance, for example, if you have deleted all PICs but not yet applied those deletions. This field is deprecated in favor of has_stateful_config.",
                  "type": ["boolean", "null"]
                },
                "perInstanceConfigs": {
                  "description": "[Output Only] Status of per-instance configs on the instance.",
                  "type": ["object", "null"],
                  "properties": {
                    "allEffective": {
                      "description": "A bit indicating if all of the group's per-instance configs (listed in the output of a listPerInstanceConfigs API call) have status `EFFECTIVE` or there are no per-instance-configs.",
                      "type": ["boolean", "null"]
                    }
                  }
                }
              }
            },
            "versionTarget": {
              "description": "[Output Only] A status of consistency of Instances' versions with their target version specified by `version` field on Instance Group Manager.",
              "type": ["object", "null"],
              "properties": {
                "isReached": {
                  "description": "[Output Only] A bit indicating whether version target has been reached in this managed instance group, i.e. all instances are in their target version. Instances' target version are specified by `version` field on Instance Group Manager.",
                  "type": ["boolean", "null"]
                }
              }
            }
          }
        },
        "updatePolicy": {
          "type": ["object", "null"],
          "properties": {
            "maxSurge": {
              "type": ["object", "null"],
              "properties": {
                "calculated": {
                  "description": "[Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value. - If the value is a `percent`, then the `calculated` value is `percent`/100 * `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded.",
                  "type": ["integer", "null"],
                  "format": "int64"
                }
              }
            },
            "maxUnavailable": {
              "type": ["object", "null"],
              "properties": {
                "calculated": {
                  "description": "[Output Only] Absolute value of VM instances calculated based on the specific mode. - If the value is `fixed`, then the `calculated` value is equal to the `fixed` value. - If the value is a `percent`, then the `calculated` value is `percent`/100 * `targetSize`. For example, the `calculated` value of a 80% of a managed instance group with 150 instances would be (80/100 * 150) = 120 VM instances. If there is a remainder, the number is rounded.",
                  "type": ["integer", "null"],
                  "format": "int64"
                }
              }
            }
          }
        },
        "zone": {
          "description": "[Output Only] The URL of a [zone](/compute/docs/regions-zones/#available) where the managed instance group is located (for zonal resources).",
          "type": ["string", "null"]
        }
      }
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "compute.cnrm.cloud.google.com",
      "kind": "ComputeInstanceGroupManager",
      "version": "v1beta1"
    }
  ],
  "$schema": "http://json-schema.org/schema#"
}

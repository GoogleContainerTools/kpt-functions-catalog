{
  "description": "SQLInstanceList is a list of SQLInstance",
  "required": ["items"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["sql.cnrm.cloud.google.com/v1beta1"]
    },
    "items": {
      "description": "List of sqlinstances. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": ["array", "null"],
      "items": {
        "type": ["object", "null"],
        "required": ["spec"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": ["string", "null"],
            "enum": ["sql.cnrm.cloud.google.com/v1beta1"]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": ["string", "null"],
            "enum": ["SQLInstance"]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": ["object", "null"],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": ["string", "null"]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": ["string", "null"]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": ["array", "null"],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": ["object", "null"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": ["string", "null"]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": ["string", "null"]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": ["object", "null"]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": ["string", "null"]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": ["string", "null"]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": ["string", "null"]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": ["string", "null"],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": ["string", "null"]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": ["string", "null"]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": ["array", "null"],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": ["object", "null"],
                  "required": ["apiVersion", "kind", "name", "uid"],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": ["boolean", "null"]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": ["boolean", "null"]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": ["string", "null"]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": ["string", "null"]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": ["string", "null"]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "type": "object",
            "required": ["settings"],
            "properties": {
              "databaseVersion": {
                "description": "Immutable. The MySQL, PostgreSQL or SQL Server (beta) version to use. Supported values include MYSQL_5_6, MYSQL_5_7, MYSQL_8_0, POSTGRES_9_6, POSTGRES_10, POSTGRES_11, POSTGRES_12, POSTGRES_13, SQLSERVER_2017_STANDARD, SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB. Database Version Policies includes an up-to-date reference of supported versions.",
                "type": ["string", "null"]
              },
              "encryptionKMSCryptoKeyRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The name of a KMSCryptoKey.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "masterInstanceRef": {
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "The name of a SQLInstance.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "region": {
                "description": "Immutable. The region the instance will sit in. Note, Cloud SQL is not available in all regions. A valid region must be provided to use this resource. If a region is not provided in the resource definition, the provider region will be used instead, but this will be an apply-time error for instances if the provider region is not supported with Cloud SQL. If you choose not to provide the region argument for this resource, make sure you understand this.",
                "type": ["string", "null"]
              },
              "replicaConfiguration": {
                "description": "The configuration for replication.",
                "type": ["object", "null"],
                "properties": {
                  "caCertificate": {
                    "description": "Immutable. PEM representation of the trusted CA's x509 certificate.",
                    "type": ["string", "null"]
                  },
                  "clientCertificate": {
                    "description": "Immutable. PEM representation of the replica's x509 certificate.",
                    "type": ["string", "null"]
                  },
                  "clientKey": {
                    "description": "Immutable. PEM representation of the replica's private key. The corresponding public key in encoded in the client_certificate.",
                    "type": ["string", "null"]
                  },
                  "connectRetryInterval": {
                    "description": "Immutable. The number of seconds between connect retries.",
                    "type": ["integer", "null"]
                  },
                  "dumpFilePath": {
                    "description": "Immutable. Path to a SQL file in Google Cloud Storage from which replica instances are created. Format is gs://bucket/filename.",
                    "type": ["string", "null"]
                  },
                  "failoverTarget": {
                    "description": "Immutable. Specifies if the replica is the failover target. If the field is set to true the replica will be designated as a failover replica. If the master instance fails, the replica instance will be promoted as the new master instance.",
                    "type": ["boolean", "null"]
                  },
                  "masterHeartbeatPeriod": {
                    "description": "Immutable. Time in ms between replication heartbeats.",
                    "type": ["integer", "null"]
                  },
                  "password": {
                    "description": "Immutable. Password for the replication connection.",
                    "type": ["object", "null"],
                    "properties": {
                      "value": {
                        "description": "Value of the field. Cannot be used if 'valueFrom' is specified.",
                        "type": ["string", "null"]
                      },
                      "valueFrom": {
                        "description": "Source for the field's value. Cannot be used if 'value' is specified.",
                        "type": ["object", "null"],
                        "properties": {
                          "secretKeyRef": {
                            "description": "Reference to a value with the given key in the given Secret in the resource's namespace.",
                            "type": ["object", "null"],
                            "required": ["name", "key"],
                            "properties": {
                              "key": {
                                "description": "Key that identifies the value to be extracted.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the Secret to extract a value from.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "sslCipher": {
                    "description": "Immutable. Permissible ciphers for use in SSL encryption.",
                    "type": ["string", "null"]
                  },
                  "username": {
                    "description": "Immutable. Username for replication connection.",
                    "type": ["string", "null"]
                  },
                  "verifyServerCertificate": {
                    "description": "Immutable. True if the master's common name value is checked during the SSL handshake.",
                    "type": ["boolean", "null"]
                  }
                },
                "additionalProperties": false
              },
              "resourceID": {
                "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
                "type": ["string", "null"]
              },
              "rootPassword": {
                "description": "Immutable. Initial root password. Required for MS SQL Server, ignored by MySQL and PostgreSQL.",
                "type": ["object", "null"],
                "properties": {
                  "value": {
                    "description": "Value of the field. Cannot be used if 'valueFrom' is specified.",
                    "type": ["string", "null"]
                  },
                  "valueFrom": {
                    "description": "Source for the field's value. Cannot be used if 'value' is specified.",
                    "type": ["object", "null"],
                    "properties": {
                      "secretKeyRef": {
                        "description": "Reference to a value with the given key in the given Secret in the resource's namespace.",
                        "type": ["object", "null"],
                        "required": ["name", "key"],
                        "properties": {
                          "key": {
                            "description": "Key that identifies the value to be extracted.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the Secret to extract a value from.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "settings": {
                "description": "The settings to use for the database. The configuration is detailed below.",
                "type": "object",
                "required": ["tier"],
                "properties": {
                  "activationPolicy": {
                    "description": "This specifies when the instance should be active. Can be either ALWAYS, NEVER or ON_DEMAND.",
                    "type": ["string", "null"]
                  },
                  "authorizedGaeApplications": {
                    "description": "DEPRECATED \u2014 This property is only applicable to First Generation instances, and First Generation instances are now deprecated. see https://cloud.google.com/sql/docs/mysql/deprecation-notice for information on how to upgrade to Second Generation instances.\nSpecifying this field has no-ops; it's recommended to remove this field from your configuration.",
                    "type": ["array", "null"],
                    "items": {
                      "type": ["string", "null"]
                    }
                  },
                  "availabilityType": {
                    "description": "The availability type of the Cloud SQL instance, high availability\n(REGIONAL) or single zone (ZONAL). For MySQL instances, ensure that\nsettings.backup_configuration.enabled and\nsettings.backup_configuration.binary_log_enabled are both set to true.",
                    "type": ["string", "null"]
                  },
                  "backupConfiguration": {
                    "type": ["object", "null"],
                    "properties": {
                      "backupRetentionSettings": {
                        "type": ["object", "null"],
                        "required": ["retainedBackups"],
                        "properties": {
                          "retainedBackups": {
                            "description": "Number of backups to retain.",
                            "type": "integer"
                          },
                          "retentionUnit": {
                            "description": "The unit that 'retainedBackups' represents. Defaults to COUNT.",
                            "type": ["string", "null"]
                          }
                        },
                        "additionalProperties": false
                      },
                      "binaryLogEnabled": {
                        "description": "True if binary logging is enabled. If settings.backup_configuration.enabled is false, this must be as well. Cannot be used with Postgres.",
                        "type": ["boolean", "null"]
                      },
                      "enabled": {
                        "description": "True if backup configuration is enabled.",
                        "type": ["boolean", "null"]
                      },
                      "location": {
                        "description": "Location of the backup configuration.",
                        "type": ["string", "null"]
                      },
                      "pointInTimeRecoveryEnabled": {
                        "description": "True if Point-in-time recovery is enabled.",
                        "type": ["boolean", "null"]
                      },
                      "startTime": {
                        "description": "HH:MM format time indicating when backup configuration starts.",
                        "type": ["string", "null"]
                      },
                      "transactionLogRetentionDays": {
                        "description": "The number of days of transaction logs we retain for point in time restore, from 1-7.",
                        "type": ["integer", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "collation": {
                    "description": "The name of server instance collation.",
                    "type": ["string", "null"]
                  },
                  "crashSafeReplication": {
                    "description": "DEPRECATED \u2014 This property is only applicable to First Generation instances, and First Generation instances are now deprecated. see https://cloud.google.com/sql/docs/mysql/deprecation-notice for information on how to upgrade to Second Generation instances.\nSpecifying this field has no-ops; it's recommended to remove this field from your configuration.",
                    "type": ["boolean", "null"]
                  },
                  "databaseFlags": {
                    "type": ["array", "null"],
                    "items": {
                      "type": ["object", "null"],
                      "required": ["name", "value"],
                      "properties": {
                        "name": {
                          "description": "Name of the flag.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Value of the flag.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "diskAutoresize": {
                    "type": ["boolean", "null"]
                  },
                  "diskAutoresizeLimit": {
                    "description": "The maximum size, in GB, to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
                    "type": ["integer", "null"]
                  },
                  "diskSize": {
                    "description": "The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.",
                    "type": ["integer", "null"]
                  },
                  "diskType": {
                    "description": "The type of data disk: PD_SSD or PD_HDD.",
                    "type": ["string", "null"]
                  },
                  "insightsConfig": {
                    "description": "Configuration of Query Insights.",
                    "type": ["object", "null"],
                    "properties": {
                      "queryInsightsEnabled": {
                        "description": "True if Query Insights feature is enabled.",
                        "type": ["boolean", "null"]
                      },
                      "queryStringLength": {
                        "description": "Maximum query length stored in bytes. Between 256 and 4500. Default to 1024.",
                        "type": ["integer", "null"]
                      },
                      "recordApplicationTags": {
                        "description": "True if Query Insights will record application tags from query when enabled.",
                        "type": ["boolean", "null"]
                      },
                      "recordClientAddress": {
                        "description": "True if Query Insights will record client address when enabled.",
                        "type": ["boolean", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "ipConfiguration": {
                    "type": ["object", "null"],
                    "properties": {
                      "allocatedIpRange": {
                        "description": "Immutable. The name of the allocated ip range for the private ip CloudSQL instance. For example: \"google-managed-services-default\". If set, the instance ip will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?.",
                        "type": ["string", "null"]
                      },
                      "authorizedNetworks": {
                        "type": ["array", "null"],
                        "items": {
                          "type": ["object", "null"],
                          "required": ["value"],
                          "properties": {
                            "expirationTime": {
                              "type": ["string", "null"]
                            },
                            "name": {
                              "type": ["string", "null"]
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "ipv4Enabled": {
                        "description": "Whether this Cloud SQL instance should be assigned a public IPV4 address. At least ipv4_enabled must be enabled or a private_network must be configured.",
                        "type": ["boolean", "null"]
                      },
                      "privateNetworkRef": {
                        "type": ["object", "null"],
                        "properties": {
                          "external": {
                            "description": "The selfLink of a ComputeNetwork.",
                            "type": ["string", "null"]
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": ["string", "null"]
                          },
                          "namespace": {
                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": ["string", "null"]
                          }
                        },
                        "additionalProperties": false
                      },
                      "requireSsl": {
                        "type": ["boolean", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "locationPreference": {
                    "type": ["object", "null"],
                    "properties": {
                      "followGaeApplication": {
                        "description": "A Google App Engine application whose zone to remain in. Must be in the same region as this instance.",
                        "type": ["string", "null"]
                      },
                      "zone": {
                        "description": "The preferred compute engine zone.",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "maintenanceWindow": {
                    "description": "Declares a one-hour maintenance window when an Instance can automatically restart to apply updates. The maintenance window is specified in UTC time.",
                    "type": ["object", "null"],
                    "properties": {
                      "day": {
                        "description": "Day of week (1-7), starting on Monday.",
                        "type": ["integer", "null"]
                      },
                      "hour": {
                        "description": "Hour of day (0-23), ignored if day not set.",
                        "type": ["integer", "null"]
                      },
                      "updateTrack": {
                        "description": "Receive updates earlier (canary) or later (stable).",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "pricingPlan": {
                    "description": "Pricing plan for this instance, can only be PER_USE.",
                    "type": ["string", "null"]
                  },
                  "replicationType": {
                    "description": "DEPRECATED \u2014 This property is only applicable to First Generation instances, and First Generation instances are now deprecated. see https://cloud.google.com/sql/docs/mysql/deprecation-notice for information on how to upgrade to Second Generation instances.\nSpecifying this field has no-ops; it's recommended to remove this field from your configuration.",
                    "type": ["string", "null"]
                  },
                  "tier": {
                    "description": "The machine type to use. See tiers for more details and supported versions. Postgres supports only shared-core machine types, and custom machine types such as db-custom-2-13312. See the Custom Machine Type Documentation to learn about specifying custom machine types.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "conditions": {
                "description": "Conditions represent the latest available observation of the resource's current state.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.",
                      "type": ["string", "null"]
                    },
                    "message": {
                      "description": "Human-readable message indicating details about last transition.",
                      "type": ["string", "null"]
                    },
                    "reason": {
                      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                      "type": ["string", "null"]
                    },
                    "status": {
                      "description": "Status is the status of the condition. Can be True, False, Unknown.",
                      "type": ["string", "null"]
                    },
                    "type": {
                      "description": "Type is the type of the condition.",
                      "type": ["string", "null"]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "connectionName": {
                "description": "The connection name of the instance to be used in connection strings. For example, when connecting with Cloud SQL Proxy.",
                "type": ["string", "null"]
              },
              "firstIpAddress": {
                "type": ["string", "null"]
              },
              "ipAddress": {
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "ipAddress": {
                      "type": ["string", "null"]
                    },
                    "timeToRetire": {
                      "type": ["string", "null"]
                    },
                    "type": {
                      "type": ["string", "null"]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                "type": ["integer", "null"]
              },
              "privateIpAddress": {
                "type": ["string", "null"]
              },
              "publicIpAddress": {
                "type": ["string", "null"]
              },
              "selfLink": {
                "description": "The URI of the created resource.",
                "type": ["string", "null"]
              },
              "serverCaCert": {
                "type": ["object", "null"],
                "properties": {
                  "cert": {
                    "description": "The CA Certificate used to connect to the SQL Instance via SSL.",
                    "type": ["string", "null"]
                  },
                  "commonName": {
                    "description": "The CN valid for the CA Cert.",
                    "type": ["string", "null"]
                  },
                  "createTime": {
                    "description": "Creation time of the CA Cert.",
                    "type": ["string", "null"]
                  },
                  "expirationTime": {
                    "description": "Expiration time of the CA Cert.",
                    "type": ["string", "null"]
                  },
                  "sha1Fingerprint": {
                    "description": "SHA Fingerprint of the CA Cert.",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "serviceAccountEmailAddress": {
                "description": "The service account email address assigned to the instance.",
                "type": ["string", "null"]
              }
            },
            "additionalProperties": false
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "sql.cnrm.cloud.google.com",
            "kind": "SQLInstance",
            "version": "v1beta1"
          }
        ],
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["SQLInstanceList"]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": ["object", "null"],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": ["string", "null"]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "sql.cnrm.cloud.google.com",
      "kind": "SQLInstanceList",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}

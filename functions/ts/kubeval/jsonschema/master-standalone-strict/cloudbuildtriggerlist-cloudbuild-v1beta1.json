{
  "description": "CloudBuildTriggerList is a list of CloudBuildTrigger",
  "required": ["items"],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": ["string", "null"],
      "enum": ["cloudbuild.cnrm.cloud.google.com/v1beta1"]
    },
    "items": {
      "description": "List of cloudbuildtriggers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md",
      "type": ["array", "null"],
      "items": {
        "type": ["object", "null"],
        "properties": {
          "apiVersion": {
            "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
            "type": ["string", "null"],
            "enum": ["cloudbuild.cnrm.cloud.google.com/v1beta1"]
          },
          "kind": {
            "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
            "type": ["string", "null"],
            "enum": ["CloudBuildTrigger"]
          },
          "metadata": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "type": ["object", "null"],
            "properties": {
              "annotations": {
                "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "clusterName": {
                "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
                "type": ["string", "null"]
              },
              "creationTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "deletionGracePeriodSeconds": {
                "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "deletionTimestamp": {
                "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                "type": ["string", "null"],
                "format": "date-time"
              },
              "finalizers": {
                "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                },
                "x-kubernetes-patch-strategy": "merge"
              },
              "generateName": {
                "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                "type": ["string", "null"]
              },
              "generation": {
                "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
                "type": ["integer", "null"],
                "format": "int64"
              },
              "labels": {
                "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "managedFields": {
                "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
                "type": ["array", "null"],
                "items": {
                  "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
                  "type": ["object", "null"],
                  "properties": {
                    "apiVersion": {
                      "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
                      "type": ["string", "null"]
                    },
                    "fieldsType": {
                      "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
                      "type": ["string", "null"]
                    },
                    "fieldsV1": {
                      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:<name>', where <name> is the name of a field in a struct, or key in a map 'v:<value>', where <value> is the exact json formatted value of a list item 'i:<index>', where <index> is position of a item in a list 'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
                      "type": ["object", "null"]
                    },
                    "manager": {
                      "description": "Manager is an identifier of the workflow managing these fields.",
                      "type": ["string", "null"]
                    },
                    "operation": {
                      "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
                      "type": ["string", "null"]
                    },
                    "subresource": {
                      "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
                      "type": ["string", "null"]
                    },
                    "time": {
                      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
                      "type": ["string", "null"],
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                "type": ["string", "null"]
              },
              "namespace": {
                "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
                "type": ["string", "null"]
              },
              "ownerReferences": {
                "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
                "type": ["array", "null"],
                "items": {
                  "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
                  "type": ["object", "null"],
                  "required": ["apiVersion", "kind", "name", "uid"],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "blockOwnerDeletion": {
                      "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
                      "type": ["boolean", "null"]
                    },
                    "controller": {
                      "description": "If true, this reference points to the managing controller.",
                      "type": ["boolean", "null"]
                    },
                    "kind": {
                      "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                      "type": "string"
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "x-kubernetes-patch-merge-key": "uid",
                "x-kubernetes-patch-strategy": "merge"
              },
              "resourceVersion": {
                "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": ["string", "null"]
              },
              "selfLink": {
                "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
                "type": ["string", "null"]
              },
              "uid": {
                "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
                "type": ["string", "null"]
              }
            },
            "additionalProperties": false
          },
          "spec": {
            "type": ["object", "null"],
            "properties": {
              "build": {
                "description": "Contents of the build template. Either a filename or build template must be provided.",
                "type": ["object", "null"],
                "required": ["step"],
                "properties": {
                  "artifacts": {
                    "description": "Artifacts produced by the build that should be uploaded upon successful completion of all build steps.",
                    "type": ["object", "null"],
                    "properties": {
                      "images": {
                        "description": "A list of images to be pushed upon the successful completion of all build steps.\n\nThe images will be pushed using the builder service account's credentials.\n\nThe digests of the pushed images will be stored in the Build resource's results field.\n\nIf any of the images fail to be pushed, the build is marked FAILURE.",
                        "type": ["array", "null"],
                        "items": {
                          "type": ["string", "null"]
                        }
                      },
                      "objects": {
                        "description": "A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.\n\nFiles in the workspace matching specified paths globs will be uploaded to the\nCloud Storage location using the builder service account's credentials.\n\nThe location and generation of the uploaded objects will be stored in the Build resource's results field.\n\nIf any objects fail to be pushed, the build is marked FAILURE.",
                        "type": ["object", "null"],
                        "properties": {
                          "location": {
                            "description": "Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\".\n\nFiles in the workspace matching any path pattern will be uploaded to Cloud Storage with\nthis location as a prefix.",
                            "type": ["string", "null"]
                          },
                          "paths": {
                            "description": "Path globs used to match files in the build's workspace.",
                            "type": ["array", "null"],
                            "items": {
                              "type": ["string", "null"]
                            }
                          },
                          "timing": {
                            "description": "Output only. Stores timing information for pushing all artifact objects.",
                            "type": ["array", "null"],
                            "items": {
                              "type": ["object", "null"],
                              "properties": {
                                "endTime": {
                                  "description": "End of time span.\n\nA timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to\nnine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\".",
                                  "type": ["string", "null"]
                                },
                                "startTime": {
                                  "description": "Start of time span.\n\nA timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to\nnine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\".",
                                  "type": ["string", "null"]
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "availableSecrets": {
                    "description": "Secrets and secret environment variables.",
                    "type": ["object", "null"],
                    "required": ["secretManager"],
                    "properties": {
                      "secretManager": {
                        "description": "Pairs a secret environment variable with a SecretVersion in Secret Manager.",
                        "type": "array",
                        "items": {
                          "type": ["object", "null"],
                          "required": ["env", "versionRef"],
                          "properties": {
                            "env": {
                              "description": "Environment variable name to associate with the secret. Secret environment\nvariables must be unique across all of a build's secrets, and must be used\nby at least one build step.",
                              "type": "string"
                            },
                            "versionRef": {
                              "type": "object",
                              "properties": {
                                "external": {
                                  "description": "The name of a SecretManagerSecretVersion.",
                                  "type": ["string", "null"]
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": ["string", "null"]
                                },
                                "namespace": {
                                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                  "type": ["string", "null"]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "images": {
                    "description": "A list of images to be pushed upon the successful completion of all build steps.\nThe images are pushed using the builder service account's credentials.\nThe digests of the pushed images will be stored in the Build resource's results field.\nIf any of the images fail to be pushed, the build status is marked FAILURE.",
                    "type": ["array", "null"],
                    "items": {
                      "type": ["string", "null"]
                    }
                  },
                  "logsBucketRef": {
                    "description": "Google Cloud Storage bucket where logs should be written. Logs file\nnames will be of the format ${logsBucket}/log-${build_id}.txt.",
                    "type": ["object", "null"],
                    "properties": {
                      "external": {
                        "description": "The url of a StorageBucket.",
                        "type": ["string", "null"]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": ["string", "null"]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "options": {
                    "description": "Special options for this build.",
                    "type": ["object", "null"],
                    "properties": {
                      "diskSizeGb": {
                        "description": "Requested disk size for the VM that runs the build. Note that this is NOT \"disk free\";\nsome of the space will be used by the operating system and build utilities.\nAlso note that this is the minimum disk size that will be allocated for the build --\nthe build may run with a larger disk than requested. At present, the maximum disk size\nis 1000GB; builds that request more than the maximum are rejected with an error.",
                        "type": ["integer", "null"]
                      },
                      "dynamicSubstitutions": {
                        "description": "Option to specify whether or not to apply bash style string operations to the substitutions.\n\nNOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.",
                        "type": ["boolean", "null"]
                      },
                      "env": {
                        "description": "A list of global environment variable definitions that will exist for all build steps\nin this build. If a variable is defined in both globally and in a build step,\nthe variable will use the build step value.\n\nThe elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
                        "type": ["array", "null"],
                        "items": {
                          "type": ["string", "null"]
                        }
                      },
                      "logStreamingOption": {
                        "description": "Option to define build log streaming behavior to Google Cloud Storage. Possible values: [\"STREAM_DEFAULT\", \"STREAM_ON\", \"STREAM_OFF\"].",
                        "type": ["string", "null"]
                      },
                      "logging": {
                        "description": "Option to specify the logging mode, which determines if and where build logs are stored. Possible values: [\"LOGGING_UNSPECIFIED\", \"LEGACY\", \"GCS_ONLY\", \"STACKDRIVER_ONLY\", \"NONE\"].",
                        "type": ["string", "null"]
                      },
                      "machineType": {
                        "description": "Compute Engine machine type on which to run the build. Possible values: [\"UNSPECIFIED\", \"N1_HIGHCPU_8\", \"N1_HIGHCPU_32\", \"E2_HIGHCPU_8\", \"E2_HIGHCPU_32\"].",
                        "type": ["string", "null"]
                      },
                      "requestedVerifyOption": {
                        "description": "Requested verifiability options. Possible values: [\"NOT_VERIFIED\", \"VERIFIED\"].",
                        "type": ["string", "null"]
                      },
                      "secretEnv": {
                        "description": "A list of global environment variables, which are encrypted using a Cloud Key Management\nService crypto key. These values must be specified in the build's Secret. These variables\nwill be available to all build steps in this build.",
                        "type": ["array", "null"],
                        "items": {
                          "type": ["string", "null"]
                        }
                      },
                      "sourceProvenanceHash": {
                        "description": "Requested hash for SourceProvenance. Possible values: [\"NONE\", \"SHA256\", \"MD5\"].",
                        "type": ["array", "null"],
                        "items": {
                          "type": ["string", "null"]
                        }
                      },
                      "substitutionOption": {
                        "description": "Option to specify behavior when there is an error in the substitution checks.\n\nNOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden\nin the build configuration file. Possible values: [\"MUST_MATCH\", \"ALLOW_LOOSE\"].",
                        "type": ["string", "null"]
                      },
                      "volumes": {
                        "description": "Global list of volumes to mount for ALL build steps\n\nEach volume is created as an empty volume prior to starting the build process.\nUpon completion of the build, volumes and their contents are discarded. Global\nvolume names and paths cannot conflict with the volumes defined a build step.\n\nUsing a global volume in a build with only one step is not valid as it is indicative\nof a build request with an incorrect configuration.",
                        "type": ["array", "null"],
                        "items": {
                          "type": ["object", "null"],
                          "properties": {
                            "name": {
                              "description": "Name of the volume to mount.\n\nVolume names must be unique per build step and must be valid names for Docker volumes.\nEach named volume must be used by at least two build steps.",
                              "type": ["string", "null"]
                            },
                            "path": {
                              "description": "Path at which to mount the volume.\n\nPaths must be absolute and cannot conflict with other volume paths on the same\nbuild step or with certain reserved volume paths.",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workerPool": {
                        "description": "Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}\n\nThis field is experimental.",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "queueTtl": {
                    "description": "TTL in queue for this build. If provided and the build is enqueued longer than this value, \nthe build will expire and the build status will be EXPIRED.\nThe TTL starts ticking from createTime.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                    "type": ["string", "null"]
                  },
                  "secret": {
                    "description": "Secrets to decrypt using Cloud Key Management Service.",
                    "type": ["array", "null"],
                    "items": {
                      "type": ["object", "null"],
                      "required": ["kmsKeyRef"],
                      "properties": {
                        "kmsKeyRef": {
                          "description": "KMS crypto key to use to decrypt these envs.",
                          "type": "object",
                          "properties": {
                            "external": {
                              "description": "The selfLink of a KMSCryptoKey.",
                              "type": ["string", "null"]
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": ["string", "null"]
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": ["string", "null"]
                            }
                          },
                          "additionalProperties": false
                        },
                        "secretEnv": {
                          "description": "Map of environment variable name to its encrypted value.\nSecret environment variables must be unique across all of a build's secrets, \nand must be used by at least one build step. Values can be at most 64 KB in size. \nThere can be at most 100 secret values across all of a build's secrets.",
                          "type": ["object", "null"],
                          "additionalProperties": {
                            "type": ["string", "null"]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "source": {
                    "description": "The location of the source files to build.\n\nOne of 'storageSource' or 'repoSource' must be provided.",
                    "type": ["object", "null"],
                    "properties": {
                      "repoSource": {
                        "description": "Location of the source in a Google Cloud Source Repository.",
                        "type": ["object", "null"],
                        "required": ["repoRef"],
                        "properties": {
                          "branchName": {
                            "description": "Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThe syntax of the regular expressions accepted is the syntax accepted by RE2 and \ndescribed at https://github.com/google/re2/wiki/Syntax.",
                            "type": ["string", "null"]
                          },
                          "commitSha": {
                            "description": "Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.",
                            "type": ["string", "null"]
                          },
                          "dir": {
                            "description": "Directory, relative to the source root, in which to run the build.\nThis must be a relative path. If a step's dir is specified and is an absolute path, \nthis value is ignored for that step's execution.",
                            "type": ["string", "null"]
                          },
                          "invertRegex": {
                            "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
                            "type": ["boolean", "null"]
                          },
                          "projectId": {
                            "description": "ID of the project that owns the Cloud Source Repository. \nIf omitted, the project ID requesting the build is assumed.",
                            "type": ["string", "null"]
                          },
                          "repoRef": {
                            "description": "The desired Cloud Source Repository. If omitted, \"default\" is\nassumed.",
                            "type": "object",
                            "properties": {
                              "external": {
                                "description": "The name of a SourceRepoRepository.",
                                "type": ["string", "null"]
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": ["string", "null"]
                              },
                              "namespace": {
                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": ["string", "null"]
                              }
                            },
                            "additionalProperties": false
                          },
                          "substitutions": {
                            "description": "Substitutions to use in a triggered build. Should only be used with triggers.run.",
                            "type": ["object", "null"],
                            "additionalProperties": {
                              "type": ["string", "null"]
                            }
                          },
                          "tagName": {
                            "description": "Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThe syntax of the regular expressions accepted is the syntax accepted by RE2 and \ndescribed at https://github.com/google/re2/wiki/Syntax.",
                            "type": ["string", "null"]
                          }
                        },
                        "additionalProperties": false
                      },
                      "storageSource": {
                        "description": "Location of the source in an archive file in Google Cloud Storage.",
                        "type": ["object", "null"],
                        "required": ["bucketRef", "object"],
                        "properties": {
                          "bucketRef": {
                            "description": "Google Cloud Storage bucket containing the source.",
                            "type": "object",
                            "properties": {
                              "external": {
                                "description": "The name of a StorageBucket.",
                                "type": ["string", "null"]
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": ["string", "null"]
                              },
                              "namespace": {
                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": ["string", "null"]
                              }
                            },
                            "additionalProperties": false
                          },
                          "generation": {
                            "description": "Google Cloud Storage generation for the object. \nIf the generation is omitted, the latest generation will be used.",
                            "type": ["string", "null"]
                          },
                          "object": {
                            "description": "Google Cloud Storage object containing the source.\nThis object must be a gzipped archive file (.tar.gz) containing source to build.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "step": {
                    "description": "The operations to be performed on the workspace.",
                    "type": "array",
                    "items": {
                      "type": ["object", "null"],
                      "required": ["name"],
                      "properties": {
                        "args": {
                          "description": "A list of arguments that will be presented to the step when it is started.\n\nIf the image used to run the step's container has an entrypoint, the args\nare used as arguments to that entrypoint. If the image does not define an\nentrypoint, the first element in args is used as the entrypoint, and the\nremainder will be used as arguments.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        },
                        "dir": {
                          "description": "Working directory to use when running this step's container.\n\nIf this value is a relative path, it is relative to the build's working\ndirectory. If this value is absolute, it may be outside the build's working\ndirectory, in which case the contents of the path may not be persisted\nacross build step executions, unless a 'volume' for that path is specified.\n\nIf the build specifies a 'RepoSource' with 'dir' and a step with a\n'dir',\nwhich specifies an absolute path, the 'RepoSource' 'dir' is ignored\nfor the step's execution.",
                          "type": ["string", "null"]
                        },
                        "entrypoint": {
                          "description": "Entrypoint to be used instead of the build step image's\ndefault entrypoint.\nIf unset, the image's default entrypoint is used.",
                          "type": ["string", "null"]
                        },
                        "env": {
                          "description": "A list of environment variable definitions to be used when\nrunning a step.\n\nThe elements are of the form \"KEY=VALUE\" for the environment variable\n\"KEY\" being given the value \"VALUE\".",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        },
                        "id": {
                          "description": "Unique identifier for this build step, used in 'wait_for' to\nreference this build step as a dependency.",
                          "type": ["string", "null"]
                        },
                        "name": {
                          "description": "The name of the container image that will run this particular build step.\n\nIf the image is available in the host's Docker daemon's cache, it will be\nrun directly. If not, the host will attempt to pull the image first, using\nthe builder service account's credentials if necessary.\n\nThe Docker daemon's cache will already have the latest versions of all of\nthe officially supported build steps (see https://github.com/GoogleCloudPlatform/cloud-builders \nfor images and examples).\nThe Docker daemon will also have cached many of the layers for some popular\nimages, like \"ubuntu\", \"debian\", but they will be refreshed at the time\nyou attempt to use them.\n\nIf you built an image in a previous build step, it will be stored in the\nhost's Docker daemon's cache and is available to use as the name for a\nlater build step.",
                          "type": "string"
                        },
                        "secretEnv": {
                          "description": "A list of environment variables which are encrypted using\na Cloud Key\nManagement Service crypto key. These values must be specified in\nthe build's 'Secret'.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        },
                        "timeout": {
                          "description": "Time limit for executing this build step. If not defined,\nthe step has no\ntime limit and will be allowed to continue to run until either it\ncompletes or the build itself times out.",
                          "type": ["string", "null"]
                        },
                        "timing": {
                          "description": "Output only. Stores timing information for executing this\nbuild step.",
                          "type": ["string", "null"]
                        },
                        "volumes": {
                          "description": "List of volumes to mount into the build step.\n\nEach volume is created as an empty volume prior to execution of the\nbuild step. Upon completion of the build, volumes and their contents\nare discarded.\n\nUsing a named volume in only one step is not valid as it is\nindicative of a build request with an incorrect configuration.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["object", "null"],
                            "required": ["name", "path"],
                            "properties": {
                              "name": {
                                "description": "Name of the volume to mount.\n\nVolume names must be unique per build step and must be valid names for\nDocker volumes. Each named volume must be used by at least two build steps.",
                                "type": "string"
                              },
                              "path": {
                                "description": "Path at which to mount the volume.\n\nPaths must be absolute and cannot conflict with other volume paths on\nthe same build step or with certain reserved volume paths.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "waitFor": {
                          "description": "The ID(s) of the step(s) that this build step depends on.\n\nThis build step will not start until all the build steps in 'wait_for'\nhave completed successfully. If 'wait_for' is empty, this build step\nwill start when all previous build steps in the 'Build.Steps' list\nhave completed successfully.",
                          "type": ["array", "null"],
                          "items": {
                            "type": ["string", "null"]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "substitutions": {
                    "description": "Substitutions data for Build resource.",
                    "type": ["object", "null"],
                    "additionalProperties": {
                      "type": ["string", "null"]
                    }
                  },
                  "tags": {
                    "description": "Tags for annotation of a Build. These are not docker tags.",
                    "type": ["array", "null"],
                    "items": {
                      "type": ["string", "null"]
                    }
                  },
                  "timeout": {
                    "description": "Amount of time that this build should be allowed to run, to second granularity.\nIf this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.\nThis timeout must be equal to or greater than the sum of the timeouts for build steps within the build.\nThe expected format is the number of seconds followed by s.\nDefault time is ten minutes (600s).",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "description": {
                "description": "Human-readable description of the trigger.",
                "type": ["string", "null"]
              },
              "disabled": {
                "description": "Whether the trigger is disabled or not. If true, the trigger will never result in a build.",
                "type": ["boolean", "null"]
              },
              "filename": {
                "description": "Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.",
                "type": ["string", "null"]
              },
              "github": {
                "description": "Describes the configuration of a trigger that creates a build whenever a GitHub event is received.\n\nOne of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.",
                "type": ["object", "null"],
                "properties": {
                  "name": {
                    "description": "Name of the repository. For example: The name for\nhttps://github.com/googlecloudplatform/cloud-builders is \"cloud-builders\".",
                    "type": ["string", "null"]
                  },
                  "owner": {
                    "description": "Owner of the repository. For example: The owner for\nhttps://github.com/googlecloudplatform/cloud-builders is \"googlecloudplatform\".",
                    "type": ["string", "null"]
                  },
                  "pullRequest": {
                    "description": "filter to match changes in pull requests.  Specify only one of pullRequest or push.",
                    "type": ["object", "null"],
                    "required": ["branch"],
                    "properties": {
                      "branch": {
                        "description": "Regex of branches to match.",
                        "type": "string"
                      },
                      "commentControl": {
                        "description": "Whether to block builds on a \"/gcbrun\" comment from a repository owner or collaborator. Possible values: [\"COMMENTS_DISABLED\", \"COMMENTS_ENABLED\", \"COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY\"].",
                        "type": ["string", "null"]
                      },
                      "invertRegex": {
                        "description": "If true, branches that do NOT match the git_ref will trigger a build.",
                        "type": ["boolean", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "push": {
                    "description": "filter to match changes in refs, like branches or tags.  Specify only one of pullRequest or push.",
                    "type": ["object", "null"],
                    "properties": {
                      "branch": {
                        "description": "Regex of branches to match.  Specify only one of branch or tag.",
                        "type": ["string", "null"]
                      },
                      "invertRegex": {
                        "description": "When true, only trigger a build if the revision regex does NOT match the git_ref regex.",
                        "type": ["boolean", "null"]
                      },
                      "tag": {
                        "description": "Regex of tags to match.  Specify only one of branch or tag.",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "ignoredFiles": {
                "description": "ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match\nextended with support for '**'.\n\nIf ignoredFiles and changed files are both empty, then they are not\nused to determine whether or not to trigger a build.\n\nIf ignoredFiles is not empty, then we ignore any files that match any\nof the ignored_file globs. If the change has no files that are outside\nof the ignoredFiles globs, then we do not trigger a build.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                }
              },
              "includedFiles": {
                "description": "ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match\nextended with support for '**'.\n\nIf any of the files altered in the commit pass the ignoredFiles filter\nand includedFiles is empty, then as far as this filter is concerned, we\nshould trigger the build.\n\nIf any of the files altered in the commit pass the ignoredFiles filter\nand includedFiles is not empty, then we make sure that at least one of\nthose files matches a includedFiles glob. If not, then we do not trigger\na build.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                }
              },
              "pubsubConfig": {
                "description": "PubsubConfig describes the configuration of a trigger that creates \na build whenever a Pub/Sub message is published.\n\nOne of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.",
                "type": ["object", "null"],
                "required": ["topicRef"],
                "properties": {
                  "serviceAccountRef": {
                    "description": "Service account that will make the push request.",
                    "type": ["object", "null"],
                    "properties": {
                      "external": {
                        "description": "The email of an IAMServiceAccount.",
                        "type": ["string", "null"]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": ["string", "null"]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "state": {
                    "description": "Potential issues with the underlying Pub/Sub subscription configuration.\nOnly populated on get requests.",
                    "type": ["string", "null"]
                  },
                  "subscription": {
                    "description": "Output only. Name of the subscription.",
                    "type": ["string", "null"]
                  },
                  "topicRef": {
                    "description": "The name of the topic from which this subscription\nis receiving messages.",
                    "type": "object",
                    "properties": {
                      "external": {
                        "description": "The name of a PubSubTopic.",
                        "type": ["string", "null"]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": ["string", "null"]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "serviceAccountRef": {
                "description": "The service account used for all user-controlled operations including\ntriggers.patch, triggers.run, builds.create, and builds.cancel.\n\nIf no service account is set, then the standard Cloud Build service account\n([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.\n\nWhen populating via the external field, the following format is supported:\nprojects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}",
                "type": ["object", "null"],
                "properties": {
                  "external": {
                    "description": "A string of the format \"projects/{{project}}/serviceAccounts/{{value}}\", where {{value}} is the email of an IAMServiceAccount.",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": ["string", "null"]
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "substitutions": {
                "description": "Substitutions data for Build resource.",
                "type": ["object", "null"],
                "additionalProperties": {
                  "type": ["string", "null"]
                }
              },
              "tags": {
                "description": "Tags for annotation of a BuildTrigger.",
                "type": ["array", "null"],
                "items": {
                  "type": ["string", "null"]
                }
              },
              "triggerTemplate": {
                "description": "Template describing the types of source changes to trigger a build.\n\nBranch and tag names in trigger templates are interpreted as regular\nexpressions. Any branch or tag change that matches that regular\nexpression will trigger a build.\n\nOne of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.",
                "type": ["object", "null"],
                "properties": {
                  "branchName": {
                    "description": "Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
                    "type": ["string", "null"]
                  },
                  "commitSha": {
                    "description": "Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.",
                    "type": ["string", "null"]
                  },
                  "dir": {
                    "description": "Directory, relative to the source root, in which to run the build.\n\nThis must be a relative path. If a step's dir is specified and\nis an absolute path, this value is ignored for that step's\nexecution.",
                    "type": ["string", "null"]
                  },
                  "invertRegex": {
                    "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
                    "type": ["boolean", "null"]
                  },
                  "repoRef": {
                    "description": "The Cloud Source Repository to build. If omitted, the repo with\nname \"default\" is assumed.",
                    "type": ["object", "null"],
                    "properties": {
                      "external": {
                        "description": "The name of a SourceRepoRepository.",
                        "type": ["string", "null"]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": ["string", "null"]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagName": {
                    "description": "Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              },
              "webhookConfig": {
                "description": "WebhookConfig describes the configuration of a trigger that creates \na build whenever a webhook is sent to a trigger's webhook URL.\n\nOne of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.",
                "type": ["object", "null"],
                "required": ["secretRef"],
                "properties": {
                  "secretRef": {
                    "description": "The secret required",
                    "type": "object",
                    "properties": {
                      "external": {
                        "description": "The name of a SecretManagerSecret.",
                        "type": ["string", "null"]
                      },
                      "name": {
                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": ["string", "null"]
                      },
                      "namespace": {
                        "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": ["string", "null"]
                      }
                    },
                    "additionalProperties": false
                  },
                  "state": {
                    "description": "Potential issues with the underlying Pub/Sub subscription configuration.\nOnly populated on get requests.",
                    "type": ["string", "null"]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "status": {
            "type": ["object", "null"],
            "properties": {
              "conditions": {
                "description": "Conditions represent the latest available observation of the resource's current state.",
                "type": ["array", "null"],
                "items": {
                  "type": ["object", "null"],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "Last time the condition transitioned from one status to another.",
                      "type": ["string", "null"]
                    },
                    "message": {
                      "description": "Human-readable message indicating details about last transition.",
                      "type": ["string", "null"]
                    },
                    "reason": {
                      "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                      "type": ["string", "null"]
                    },
                    "status": {
                      "description": "Status is the status of the condition. Can be True, False, Unknown.",
                      "type": ["string", "null"]
                    },
                    "type": {
                      "description": "Type is the type of the condition.",
                      "type": ["string", "null"]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "createTime": {
                "description": "Time when the trigger was created.",
                "type": ["string", "null"]
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
                "type": ["integer", "null"]
              },
              "triggerId": {
                "description": "The unique identifier for the trigger.",
                "type": ["string", "null"]
              }
            },
            "additionalProperties": false
          }
        },
        "x-kubernetes-group-version-kind": [
          {
            "group": "cloudbuild.cnrm.cloud.google.com",
            "kind": "CloudBuildTrigger",
            "version": "v1beta1"
          }
        ],
        "additionalProperties": false
      }
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": ["string", "null"],
      "enum": ["CloudBuildTriggerList"]
    },
    "metadata": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": ["object", "null"],
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": ["string", "null"]
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": ["integer", "null"],
          "format": "int64"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": ["string", "null"]
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": ["string", "null"]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "cloudbuild.cnrm.cloud.google.com",
      "kind": "CloudBuildTriggerList",
      "version": "v1beta1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#",
  "type": "object"
}

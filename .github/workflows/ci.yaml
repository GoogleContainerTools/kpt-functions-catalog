name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron:  '0 17 * * *'

jobs:
  shell-ci:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Lint shell scripts, ignoring third-party files
      run: |
        find . -name "*.sh" > shell_files.out
        shellcheck $(cat shell_files.out)

  ts-unit-test-ci:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [12.x]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run unit tests
      run: |
        make unit-test-ts
    - name: Check licenses
      run: |
        cd functions/ts
        make check-licenses

  go-unit-test-ci:
    runs-on: ubuntu-latest
    env:
      GOPATH: /home/runner/work/kpt-functions-catalog/functions/go
      GO111MODULE: on
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.15
      uses: actions/setup-go@v1
      with:
        go-version: 1.15
      id: go
    - name: Check out code into GOPATH
      uses: actions/checkout@v1
      with:
        path: go/src/github.com/${{ github.repository }}
    - name: Run unit tests
      run: |
        make unit-test-go
    - name: Check licenses
      run: |
        cd functions/go
        make check-licenses

  e2e-ci:
    needs: [ts-unit-test-ci, go-unit-test-ci]
    strategy:
      matrix:
        platform: [ubuntu-latest]
        node-version: [12.x]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Build node and Go docker images
      if: matrix.platform == 'ubuntu-latest'
      run: |
        make build
      # TODO(https://github.com/GoogleContainerTools/kpt/issues/1368): stop
      # building docker images with tag "latest".
    - name: Build node and Go docker images with latest tag
      if: matrix.platform == 'ubuntu-latest'
      run: |
        make TAG=latest build
    - name: Run all tests
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo curl https://storage.googleapis.com/kpt-dev/latest/linux_amd64/kpt -o /usr/local/bin/kpt
        sudo chmod +x /usr/local/bin/kpt
        make e2e-test
